<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0313.2002                               -->
<workbook original-version='18.1' source-build='2025.1.0 (20251.25.0313.2002)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (Tableau table 1)' inline='true' name='federated.08h834p0gvu7sh141mwlc1o72z22' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau table 1' name='excel-direct.1eb1ku615vn6wd1c6y1hb07zr2vb'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/kavya/Documents/Tableau/Tableau table 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1eb1ku615vn6wd1c6y1hb07zr2vb' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_04517E7AAAC04B51A5FB3B25ED5C28FB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_04517E7AAAC04B51A5FB3B25ED5C28FB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_04517E7AAAC04B51A5FB3B25ED5C28FB]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_04517E7AAAC04B51A5FB3B25ED5C28FB]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/kavya/AppData/Local/Temp/TableauTemp/#TableauTemp_0niussi0j8o0gg1f7lh290ghm5w7.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='05/13/2025 05:26:46 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_04517E7AAAC04B51A5FB3B25ED5C28FB]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_04517E7AAAC04B51A5FB3B25ED5C28FB]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DeathPercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DeathPercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DeathPercentage</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_04517E7AAAC04B51A5FB3B25ED5C28FB]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_04517E7AAAC04B51A5FB3B25ED5C28FB'>
            <properties context=''>
              <relation connection='excel-direct.1eb1ku615vn6wd1c6y1hb07zr2vb' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 2)' inline='true' name='federated.0jk6xb310hq1yx1e0qor11xvulq9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 2' name='excel-direct.1mjlsur0ed77xc1cstmcw0k0gpia'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/kavya/Documents/Tableau/Tableau Table 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1mjlsur0ed77xc1cstmcw0k0gpia' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_4B6037E713A1402BAF6320B7E7001975]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_4B6037E713A1402BAF6320B7E7001975]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_4B6037E713A1402BAF6320B7E7001975]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/kavya/AppData/Local/Temp/TableauTemp/#TableauTemp_17fgrfw1n116yt0zmw5ms1s8ygpa.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='05/13/2025 05:27:08 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Sheet1_4B6037E713A1402BAF6320B7E7001975]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalDeathCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalDeathCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalDeathCount</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_4B6037E713A1402BAF6320B7E7001975]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_4B6037E713A1402BAF6320B7E7001975'>
            <properties context=''>
              <relation connection='excel-direct.1mjlsur0ed77xc1cstmcw0k0gpia' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 3)' inline='true' name='federated.04eje6z16u4xsh15en1am1tdd1ri' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 3' name='excel-direct.0t8ropu1vycmh319j70xo1m2yw1g'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/kavya/Documents/Tableau/Tableau Table 3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0t8ropu1vycmh319j70xo1m2yw1g' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D211:no:A1:D211:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D211:no:A1:D211:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_9ADE80E725EA4B6AADA6A69A40B67B46]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_9ADE80E725EA4B6AADA6A69A40B67B46]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_9ADE80E725EA4B6AADA6A69A40B67B46]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_9ADE80E725EA4B6AADA6A69A40B67B46]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_9ADE80E725EA4B6AADA6A69A40B67B46]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/kavya/AppData/Local/Temp/TableauTemp/#TableauTemp_1uo0tot1nbyhss13190ru06kontk.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='05/13/2025 05:27:18 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>210</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Sheet1_9ADE80E725EA4B6AADA6A69A40B67B46]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>210</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_9ADE80E725EA4B6AADA6A69A40B67B46]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>190</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_9ADE80E725EA4B6AADA6A69A40B67B46]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>191</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_9ADE80E725EA4B6AADA6A69A40B67B46]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_9ADE80E725EA4B6AADA6A69A40B67B46'>
            <properties context=''>
              <relation connection='excel-direct.0t8ropu1vycmh319j70xo1m2yw1g' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D211:no:A1:D211:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 4)' inline='true' name='federated.05meyi70wu8btf11hj9to1v6xpgo' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 4' name='excel-direct.0c6rwnf0vkce4014gxo3213p84nw'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/kavya/Documents/Tableau/Tableau Table 4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0c6rwnf0vkce4014gxo3213p84nw' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_590989C3009D46258EA631149568D25C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_590989C3009D46258EA631149568D25C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_590989C3009D46258EA631149568D25C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_590989C3009D46258EA631149568D25C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_590989C3009D46258EA631149568D25C]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_590989C3009D46258EA631149568D25C]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/kavya/AppData/Local/Temp/TableauTemp/#TableauTemp_01do1l50vp6kc81a71t311vuha1t.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='05/13/2025 05:27:30 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>307</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Sheet1_590989C3009D46258EA631149568D25C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>298</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_590989C3009D46258EA631149568D25C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1198</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_590989C3009D46258EA631149568D25C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18618</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_590989C3009D46258EA631149568D25C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>28901</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_590989C3009D46258EA631149568D25C]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_590989C3009D46258EA631149568D25C'>
            <properties context=''>
              <relation connection='excel-direct.0c6rwnf0vkce4014gxo3213p84nw' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau table 1)' name='federated.08h834p0gvu7sh141mwlc1o72z22' />
          </datasources>
          <datasource-dependencies datasource='federated.08h834p0gvu7sh141mwlc1o72z22'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08h834p0gvu7sh141mwlc1o72z22].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08h834p0gvu7sh141mwlc1o72z22].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08h834p0gvu7sh141mwlc1o72z22].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08h834p0gvu7sh141mwlc1o72z22].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.08h834p0gvu7sh141mwlc1o72z22].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.08h834p0gvu7sh141mwlc1o72z22].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.08h834p0gvu7sh141mwlc1o72z22].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.08h834p0gvu7sh141mwlc1o72z22].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.08h834p0gvu7sh141mwlc1o72z22].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.08h834p0gvu7sh141mwlc1o72z22].[:Measure Names]' value='168' />
            <format attr='color' value='#1b1b1b' />
            <format attr='text-format' field='[federated.08h834p0gvu7sh141mwlc1o72z22].[Multiple Values]' value='*' />
            <format attr='height' value='19' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#ddebf0' />
            <format attr='height' field='[federated.08h834p0gvu7sh141mwlc1o72z22].[:Measure Names]' value='21' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#d4d4d4' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='2' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.08h834p0gvu7sh141mwlc1o72z22].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.8350828886032104' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.08h834p0gvu7sh141mwlc1o72z22].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{2594C846-F2E2-4148-B07E-60767FB9929B}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths Per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 2)' name='federated.0jk6xb310hq1yx1e0qor11xvulq9' />
          </datasources>
          <datasource-dependencies datasource='federated.0jk6xb310hq1yx1e0qor11xvulq9'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0jk6xb310hq1yx1e0qor11xvulq9].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jk6xb310hq1yx1e0qor11xvulq9].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.0jk6xb310hq1yx1e0qor11xvulq9].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{655194D6-9B4A-4755-8441-B2287235E482}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentage Population Infected per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 3)' name='federated.04eje6z16u4xsh15en1am1tdd1ri' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.04eje6z16u4xsh15en1am1tdd1ri'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.04eje6z16u4xsh15en1am1tdd1ri].[Longitude (generated)]' field-type='quantitative' max='19725174.568618681' min='-21253493.656508453' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.04eje6z16u4xsh15en1am1tdd1ri].[Latitude (generated)]' field-type='quantitative' max='4433834.2303887568' min='-9854780.7980472259' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.04eje6z16u4xsh15en1am1tdd1ri].[sum:PercentPopulationInfected:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.04eje6z16u4xsh15en1am1tdd1ri].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.04eje6z16u4xsh15en1am1tdd1ri].[none:Location:nk]' />
              <color column='[federated.04eje6z16u4xsh15en1am1tdd1ri].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.04eje6z16u4xsh15en1am1tdd1ri].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04eje6z16u4xsh15en1am1tdd1ri].[Latitude (generated)]</rows>
        <cols>[federated.04eje6z16u4xsh15en1am1tdd1ri].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D9DF1393-A0B4-4271-A062-BB67034559F2}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentage Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 4)' name='federated.05meyi70wu8btf11hj9to1v6xpgo' />
          </datasources>
          <datasource-dependencies datasource='federated.05meyi70wu8btf11hj9to1v6xpgo'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-prediction-interval-lower' name='[fPIL:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-prediction-interval-upper' name='[fPIU:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05meyi70wu8btf11hj9to1v6xpgo].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.05meyi70wu8btf11hj9to1v6xpgo].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.05meyi70wu8btf11hj9to1v6xpgo].[tmn:date:qk]' value='59' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.05meyi70wu8btf11hj9to1v6xpgo].[none:Location:nk]' />
              <text column='[federated.05meyi70wu8btf11hj9to1v6xpgo].[none:Location:nk]' />
              <color column='[federated.05meyi70wu8btf11hj9to1v6xpgo].[none:Forecast Indicator:nk]' />
              <text column='[federated.05meyi70wu8btf11hj9to1v6xpgo].[fVal:avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.05meyi70wu8btf11hj9to1v6xpgo].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.05meyi70wu8btf11hj9to1v6xpgo].[tmn:date:qk]</cols>
        <mark-labels>
          <mark-label id='0'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.05meyi70wu8btf11hj9to1v6xpgo].[tmn:date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.05meyi70wu8btf11hj9to1v6xpgo].[fVal:avg:PercentPopulationInfected:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.05meyi70wu8btf11hj9to1v6xpgo].[none:Location:nk]</field>
                  <field>[federated.05meyi70wu8btf11hj9to1v6xpgo].[tmn:date:qk]</field>
                  <field>[federated.05meyi70wu8btf11hj9to1v6xpgo].[fPIL:avg:PercentPopulationInfected:qk]</field>
                  <field>[federated.05meyi70wu8btf11hj9to1v6xpgo].[fPIU:avg:PercentPopulationInfected:qk]</field>
                  <field>[federated.05meyi70wu8btf11hj9to1v6xpgo].[fVal:avg:PercentPopulationInfected:qk]</field>
                  <field>[federated.05meyi70wu8btf11hj9to1v6xpgo].[none:Forecast Indicator:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;United States&quot;</value>
                <value>#2021-03-01 00:00:00#</value>
                <value>%null%</value>
                <value>%null%</value>
                <value>8.9332080572440713</value>
                <value>&quot;Actual&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='-38' y='-7' />
          </mark-label>
        </mark-labels>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{76F27FDB-E170-4B17-9F79-079D07EFCD4E}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='48529' id='9' param='horz' type-v2='layout-flow' w='98614' x='693' y='1471'>
            <zone h='48529' id='7' type-v2='layout-basic' w='98614' x='693' y='1471'>
              <zone h='18382' id='3' name='Sheet 1' w='45194' x='693' y='1471'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48529' id='6' name='Sheet 3' w='53420' x='45887' y='1471'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='30147' id='11' name='Sheet 2' w='45194' x='693' y='19853'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='48529' id='12' name='Sheet 4' w='84761' x='693' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='34742' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.05meyi70wu8btf11hj9to1v6xpgo].[none:Location:nk]&#10;[federated.05meyi70wu8btf11hj9to1v6xpgo].[none:Forecast Indicator:nk]' type-v2='color' w='13853' x='85454' y='63787'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='13787' id='10' name='Sheet 3' pane-specification-id='0' param='[federated.04eje6z16u4xsh15en1am1tdd1ri].[sum:PercentPopulationInfected:qk]' type-v2='color' w='13853' x='85454' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='17' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97058' id='16' param='vert' type-v2='layout-flow' w='98614' x='693' y='1471'>
                <zone fixed-size='139' h='18382' id='3' is-fixed='true' name='Sheet 1' w='45194' x='693' y='1471'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48529' id='6' is-fixed='true' name='Sheet 3' w='53420' x='45887' y='1471'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13787' id='10' name='Sheet 3' pane-specification-id='0' param='[federated.04eje6z16u4xsh15en1am1tdd1ri].[sum:PercentPopulationInfected:qk]' type-v2='color' w='13853' x='85454' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='233' h='30147' id='11' is-fixed='true' name='Sheet 2' w='45194' x='693' y='19853'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48529' id='12' is-fixed='true' name='Sheet 4' w='84761' x='693' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='34742' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.05meyi70wu8btf11hj9to1v6xpgo].[none:Location:nk]&#10;[federated.05meyi70wu8btf11hj9to1v6xpgo].[none:Forecast Indicator:nk]' type-v2='color' w='13853' x='85454' y='63787'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6ABDF358-AEF7-4E09-B297-D2BED4FDCA70}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08h834p0gvu7sh141mwlc1o72z22].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{891AC0B7-495B-4CA4-AC86-7AC4FEC875E7}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jk6xb310hq1yx1e0qor11xvulq9].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EDB623DC-A5F8-4C57-8918-87B7847EBA8F}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.04eje6z16u4xsh15en1am1tdd1ri].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04eje6z16u4xsh15en1am1tdd1ri].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{B6BB199F-CCED-4E93-A79A-244F654DB266}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.05meyi70wu8btf11hj9to1v6xpgo].[none:Location:nk]&#10;[federated.05meyi70wu8btf11hj9to1v6xpgo].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05meyi70wu8btf11hj9to1v6xpgo].[none:Forecast Indicator:nk]</field>
            <field>[federated.05meyi70wu8btf11hj9to1v6xpgo].[none:Location:nk]</field>
            <field>[federated.05meyi70wu8btf11hj9to1v6xpgo].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E2B38E1F-0D38-4E12-9C8E-B78CB8E4DC79}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='4' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.05meyi70wu8btf11hj9to1v6xpgo].[none:Forecast Indicator:nk]</field>
              <field>[federated.05meyi70wu8btf11hj9to1v6xpgo].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='11' />
      <simple-id uuid='{182A98B6-2290-4925-BED6-3145B4478AAC}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='43' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAXkUlEQVR4nO3d+XMc533n8Xf33AcGM7jviwQIkARIAjxEUhdtHVYSa22vr3ISVyqV1O5m
      /wntj/sHbKqyteukdtcbWSmXYzuRIokSKdHifQMEARIAcQyAweAYzH137w88bGkFYUjNDAn0
      91WF0gw4eJ5nWv3pu7+t6LquI4RBqU97AEI8TRIAYWgSAGFoEgBhaBIAYWgSgK1E11mdG+Od
      f/w5n92cRtvoY1qOZDINaGTyG33q//+bRCpdtKFuFeanPQBRuFxyjV/966f88U9+ipss2USY
      +cAa1Q3NqNko0WgczeLGkhzj57+c5s/+8nVSZhcVmTDxWAKrp5Zqt4mF+UXs3noqTGlC0RQZ
      TcWZnuN/fjjGX/zg31Ff7UF52l+2TCQAW0g6Hkbz1NLosQNWfvW//g53UxcffzZMgyNAzt3N
      8OgoP3llB9HYOpFEhJTbzMdv/4zO/qNcuf0pJzpNvH8jQEat5Fs9GrfYgzZ1lp6hQ8Qj66xH
      k9RXe572Vy0b2QTaQmxOD3p4mWA8TSwWZTmhcfzoYdRoiLTFwe79h6itMFPf3klzcxddTVUA
      mJyVDB46jlOJElwMsuPAi7z5+gvYTNC1e4ieZhfumnaa27robq97yt+yvExvvfXWW097EKIw
      qsVBa42N0yc/JmGu4WCXl/dOXWD38RM0V1jx1Tajahk6OnpZm7nMquKjocaHJZelqaWdbCbN
      4MEh7g5fJ6646GiqxlndSoUpg691FwRGmYvbaWusMswmkCKXQggjeyY3gXRdR3IpyuGZDEA+
      n3/aQxAG8UwGQIhykQAIQ5MACEOTAAhDkwAIQ5MACEPbEtcC3VudJJIKF609VVHpb9pftPbE
      1lWkAOgEZ+8yPh2g//CL2BNznL44gs3TzPOHu7l+/hzBqMaRF18iNn2N0dlV2vuGqDQn8Pma
      Cdy7gXfHENWOLz8B/8sbb3PVf6k4QwVsZjt//5O3i9ae2LqKtgnkq2+nvbGSvAYT0wGe/8ar
      dFcmmZhZxtW0i9eO7+Te9CrBmMbrr75IaiVIMpMmvjRJyNRA1QYzvxClVKQ1gILFZsOk3p+J
      8yYLdpMJp9PKYiJHjdeJ2W2DRASr1Y7JZMWq58il4nx6Y5Yj33oTBcjlcui6jqZp5PN5FOV+
      e5pW2E0djyOTyRS9TbH1FG0TKB4JE1oPY7Wv4zVluT09R2I+SteeJu5OzpJfSWFv3ENyeoaZ
      mSkiqp1Gu4PX/6iXkeFrVB85jNNyfzi5XA6TyfQoAKpa/H11q9Va9DbF1lO0AETXgmQUF5lQ
      kI6eATJ3x/D17ae2ugIlFWcpYWJ3k4dcZT/j00EG9vSg5pPYbC6G9ncTz2o4LXJQSpRXkQKg
      0tDRQ0PH73/TvWffo9c1zV3UPHhtqqhhoP/hu4r7/3FXI8tj8TTIIlcYmgRAGJoEQBiaBEAY
      mgRAGJoEQBiaBEAYmgRAGJoEQBiaBEAYmgRAGJoEQBiaBEAYmgRAGJoEQBiaBEAYmgRAGJoE
      QBiaBEAY2paoDFdOkVSYD8ffK2qbuxv66avfU9Q2RXFIAL4gkorwyxvFrRqnKqoE4Bklm0DC
      0CQAwtAkAMLQShIAPRPlwplPGJ5YQEdjYWKYs1dHyeZ1EqF5zvzuHGvxDOFwiEwmT3xlnlBK
      Hosqyq8kAbh1/SYd+w7hCE8wNRdgNmZmpyfJ8Ow6N0bu0r+7ndGRO6ysBknFw1y7s0SlrRQj
      EeKrleQoUEtTLRfOncFs89LXmKOhro66Rp2ZyyEcbh/eqlq86jKZVJz337vJ8W9/B1VRnonq
      0Nlstuh95fN5qUb9jCpJAOYWVjj04jeIjJ9nNaahEyO5mkGpqCQdCpBJJ0lgosru5eXnq7l7
      d5rGwW7M5qdfHdpisRS9L5PJJNWon1El2QRqa23g6menmEk46WprQFmf48zNJbo7qmirdXPq
      kwtUt7Tgdrpw17azw5clEJYlpCi/kqwBKhu7eKWx69H7/sPP0//w33YO0Ljz4b94AXB07i7F
      MITYlBwGFYYmARCGJgEQhiYBEIYmARCGJgEQhiYBEIYmARCGJgEQhiYBEIYmARCGJgEQhiYB
      EIZWYACSTE0uousa/slp0qUdkxBlU8Dl0Gkun3qXX70/weGjPSzMp/jzv+lA7mAU20EBATDR
      smMXg4NOeno6OXSsEVfpxyVEWRQQADMNbV2k/+Ujzp5dwFXZwZvf/ybO0o/NEH55422u+S8X
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOS915NdR57n98k85npvynsUPECApptNNtvN9nRP9Mys0SpiNlYKhfZBUihC
      r3ru/0AvetKbpJFmZjd2Z2J2Z1bdPW1JNkmQBAiAAKpQhfLuVtX1/h6Terjl65YDCjSz34oi
      C+fkyZPnnN8v8+dTvDe7ppZaGl93qMwcXakAUuv8LALZbqcUxUyGqh5BlDcRfZfAMDv32aji
      rs4gQnHCskEwEWd9JYvbPQZCtNsUNvCUVvEFA/gTCZRyKWxkqZsxhD9MqDhHIJVCIHb6rW5u
      Ugz1I0wvqrBB0tPC9AdQKMrZAmXhx5NfAhSJ0VEQUNnMYrVsYj1dCNF+Fte22dgo4naN7ozn
      ZSJlWGir0ySHB1/6vU4NpbBti1I2TzlfQEpJ0dYJGIpAJMK6CqM8PoTh6Xi5vtTS+LRmfMGj
      Pl+oVhPf4gKN8DBCiH3E1oZAIHEsi6WnMxTyFZLJEJGuNNNPJpEjryC2GEc5NgiJkBJ7epYu
      e4PW8jx2o0n/zetMbzRQEROlFKqcQ/hTWM8+o9fTpPv2q5RWVpgrCJzGKrL/Mt25BbqCfgS7
      jDk1MUvj1mVUS+GZmuTC5UG0eh3bsnjydAmrUiZQzTDwjTeo1GsgoO5YTN+5S8/liySHBrae
      UbG2uUaGJDKcfPnv2ZH0z83zxlA34gtguBPHoxSu65Jfz3DvV+/RPTrI0JUL5B5Pc8dOIqoK
      2ZcCi/ZvB+hf6IhfElS9gnRtUC4ICR0YoFYqs/BoAsPj4dIrY3iCIaymhSrMYk78DjuQxO25
      gLs4gV7M4Fz8JkopEkODeAIBSivLzN59gPPaT5CAKmUJL35KOdSHiHUj3QzKdSkuzhM1A1Sz
      G9R1D6HBLpTr0qpVkbqJ3WxSi/YjhUBVS0R8GprRnoCquTyWJ4JvcwHT76Wyvo43GkEg8IXD
      hHt7KRVKxHoblNY2wVWYuobIzKNCiZdPlAIqWoTZmSVGxwZe7r1OMxwhkFIQSSa5+Z1vMXf/
      Mb//T7/C9BgMdcNa2cVWY8eujv8oGMAtrJPsjiOk7HBWkN/Is7SYJZpM0jfaj9Ta7arr66jS
      JoPjNxBCsfjol9T7bhCpLtJYvEfZiFHJFfAEAgS7utEzRSxfCGiLR8FkArOapVrMEbtxBSEl
      PbduY9erPJt/howkqZfWwXWZe/gU1TWCcB3EhTfaI6sV8Ri7H6eYLSBj46R9I5h+H/54bB9R
      h8M+lhp+JifXsIMpvCuPEc067oVvIlEcZvzzhaoWUWszePqvv9T7nAVCSNbmFthYXCY0NEJZ
      X+PazVHmHz5B+SInXt+JYr5WUEphOnW8ocARLQSbi2toEvrGBnaIXymF7jG48voNfJEwvmgU
      r7ARc/cJplL0pMPISpZ6ywZAahrCMMBur6Uy1U+m5JLqSXHh9VsYPh9CCHSvFyMYpPv11xGu
      w1pR4YvFCPX24/Rdwbn0LYThQSkXI7dAuLd3Z6T+dApV3CC7WUL3eJD67vxkN5usTc/T2lyj
      aUYIFBcY/+Ztht98g1huCv3hr17OCz7wLu1qCa/XQOF+Afc7HfrGR3nle29hSoei66NWa9Jz
      YZhGbhNQx1779WeAWhm/XcT0+baO7M6CdqPFyqMJ6v3XcVxw6rWdc0IIgl1d+KLRnZUjOTLM
      1deuEuvvwxMK4QtFaBRLO9cEvTqq2e5DSA138BpPH82Qm1/cNybNMGgWi4h4Dy3bxW42aVou
      wh9CyC1dQClUs77/Ok3HXpiklC9T3dxEKbXdlPz8Ak6zgbE6CZ/9gtrU5yze+RiBYPDmdbr8
      YC9Ptxu/LNhNSjULfzi4deAl3usEKKV23o8QAqnppPu6uXUxyYOlJktrJURygJNWxa8/A1SL
      6I0KdqNx4IygWamRjYyB69KV9GMEggdabK0GuChcfPEoutm2CBk+H2Y5Q9WWuI4DQCDkR1QL
      u9d7A6jXf8KS2U9xbb39URwXlMBttVC2hbIsFu98QjXUt0v8AK6LJsU+sc1vSjQpGRwfoFUu
      Y9XqgEQKjUhPH4YGF77/PSKpBL54nPjotvVH4YlECKw9wa3tMux5Q/jCjL9xC2/Aj3LdHQL8
      MqCUy8yDR9TK5a1/K0KxKKMXh/n21RgbKoTsHjrROva1ZwCZ6KUw8jbz83ms2jYTtK0+zWoF
      FYzjZuYJRSM4jea+a9XWD/t+dxGL+DGUg2u3xaBAMomZnUe5zm4jIdB6R1nJtbCbTVY+u0c9
      V6BuCYQUhFQZJXVUrbifYKQE3dzHAIbXSzgepVFtEBsdxdhZ1UD3ehn+1pv4E3F6X72NPxal
      Xsihe4z28+o6FDawJz7BzWdQjd3V7rygWg18wbaoOf3ZI57df0w5X9iZIL5YCMLxGA/f/RCr
      2dzRlZRyiXUnSVIG03tiL9q//F/+15+uWl9fP4CQEjw+rEg35aePSKRjKBcquQLZbBk7NQK+
      IMVnT7EzSzgKNp5MIKTEEwrDPll2vwnVCAYJhX14gsGde9mlHFV/F+KA78ANp2D2AZqhs2b5
      aQ7dwllfYLgvTGJ0GFUvU8OL8G7pKq6LvjFHsiu+71m8Pg/Lq3nsYpZIT9eOWVdqGrrHCyh0
      r5dgdxf+RKI9wQnB6v37uK0W9cVp1MJjgm4FW/NA4GRF8LRQ9QrJ+jKmafBwcpXllRxOKU96
      sG+P/0WRX5zm0zsP0CNpQv7OPpajkM+sovtDaMdN3HaDfLlJIh3HsR0evXeHlelZoukkps8A
      Ac1ymZWnM8ju4SOMI22cuALUZz6n8fB9VOugiPHVgtAN6pF+Kps5FmZXmW0EqQ6+Bh4fMtaF
      O/Yq63VBZmoWXdcJJtPbV+78igOvQ5o6vlh037FmvQkdnG3C42NdRVj39mON3EY1qoRqa7Rq
      VXSPh57BbryZp20/A4DUaEZ6mX3wmMzTKSq5PAC+SJjxK/10Xxzd6lltiWhqn+IphNhnIYr0
      9eHYFpprEwj6GXvlCuHMY5R7fsqqiCSY8F7kt89alD0JlNXC5/ei6bvvo7byjA/vLTAwOkyr
      enZxbPrux9TtExo1CkzNrgKCgcvjvPHjHzB04yrv/+4eG+s5QBFLREi7OVQpd2xXHVeA9ktT
      2JkFimtzNK0GTHyK02qix9KoVhOk9pVwhuyFCMfJzc5i9V9DJnoRHt/u0piZZyjtpf/qJcJ9
      fUhd35nt24S/pVDtU5oUe1cFpRTlco1GtB+hHbYgi2QfRNMIIVClLL0Bh2h/X5tYpaCQ2cSK
      ta8VQqCkRm1uiqoZpfT0McFoGMPvxfCY6KZ54P0eL297giFiQ8MIXScxNkZ26imbTycRrgWp
      tjL4ot9LCAH+MG4ghthcRA1eY329gLU6R/dwPyCYm3lKz9gt1j//JZt2Am3pLn/3y0/QNcmH
      P/9PfPrRQyL9fXz47/+CD34/SdfFAH/7v/07Prv/ISo0gltYItkV5T/+33/B3U+eEk+F+f/+
      7Z9z5x/uELp0jUd/9+e8/+5dWoFeIqLFzP3HADx9+JTKtR+SW1ljIO0jEA7h9fpZqumIYPTI
      ZzrEAFYug/PJz2itzVEpruNGYniKmyivF6dRpbg4Q3nmMdr6AkbfWPulbMu2XxBDKNtqe2sP
      3E8IgUwPIg7IfkIIaNWIuBVMrwfXtnGVwqpWaZQqaIaOpun7iF/tMMSeVUGAoQtyi8so3YPw
      +gFwi5sgBUI3dhmulCNKFW84uHOskc9R8yXb4xMCXEXUyTE6kiSSTuGNRZ/zFQqk1JC6Tqir
      i1alwuqDh8QG+1HlPM3Fqbb5NxDdr4g/B5RSiKUJAm4NHAdXM6lWalwY7UFKSSO7RqFlcOut
      t8jMThAwFAPf/iMCa/e5M5EhFPDi1ep89vESkZiPrgu9mL6LfPefXKNSqGOV1/F6DBZWs1SW
      HhMceJOBy8O8dbmLrGnQKgX48R9/k2JdodfLrE7NEkrGGbk2zuJylrr0MxhyKWTWaVTrrDY9
      yMjRXvJ9DGDn16m/9zdUE100I1GUt62EOcEwtj+E4wsg/H5kKIS+NofQDNziBlY2g1stIP3h
      nZCClwn76V2ol5CR1Okv8kcoZgts3PuE9YUlci2T9bpBXouQW13HyWXwhYN7xu8C8lBYheE1
      8bVKFD99F9V3EWGYWBN3AIEMx/c0NKk+/JDkQN+ODOoPBylMT+EmBxFSInSDRrWG3y4TiEZp
      lUsgJHKPSKGU2sfoTqtF5vETAom9jr/94xRSEuzqYmNyAn84SLI7QTqkkVtYhGT/C68E5sYs
      b12Jc3EghF0tE4om2Hz6mO7hQYKREE9//yvef/cO/u6L9EQ8mKleEnEvq9NzOGaQK6/cprE5
      j6UHGLk6jFM1SKQMGk2JdKqE4zFmn84TTydID13G54OQDg1PmvLkr7nz6RTZbBUKWUKpOI1y
      lWK5RT7QjUgPUl+ep7CyRi5XoeZPIqNH04n4y8kNdWdxk+bs51g4qPVFmsOXocMSvw+ui1bY
      RMuv0+wZQXMdfI6DJxhHJvtRArRoGmGYbXu36dkJ4jozlELZLVS1hPD4cdYX0J/dwbn1I7R4
      N8pqoSoFRDR14sd1Szm03DKyXkR3GrhIrHoTlV+nd7yfxNjontbbuoHYWhF25Wmn1WJ1Zpk8
      YdxgHBFLI327ZlZneZohf41oIsy2+OI6DnMf3aWUvIjsHUP6QyjXxX32GUZmmmY+y/DrtwnG
      ouheEyEF2Wez+CIRjEAA3WvitFrMvP8RIhyja7iPcDJxSHcBqKyvM/veu1z/5/+CZqnEysPP
      KeFDXPoGMtF7qP2pP4XVIvjs91DI0DPYy4UrQ5RW1yjny1y4ffO5+z0LXMcln1mnWiyx+myO
      Yr6Mf/QyWA1Knjj1UDduo4YMx5H+8LHWIF01axTu/QYn1YXyBCB07XSjkBInlsKJJhFS4gJV
      pajXy4i5+1hK4hE6hmHilDYQuk5g5AZ679jZHzi3RmjpLtViGbv/Kno1y+hr13k2/wTi3TjL
      U9j3f4vnx/89mJ6teKAO/WwuE914QvdAN5qnC800Ua6LXa+jGMII+A5cseWI6mAilYZB11A3
      5uwca1WB7G0zjnIdVHETTC92bQMV3xWBlOPQtBxErGtHFBFSIi/cwoqkcB9/wOJqGe/0HJ5Y
      FI+p4SKpz8xS3thApPrpTgUIDw+zWvVgLi4TiscOWDna9wqm03Rdu47daDD//vuYwSBdYYm1
      /phCNN1Rhzntt7gyECR6s5e7957x/gdPCdgVgn6DbZ3pZUNqkkRvN5qhM/fwCW//6Q8xvV4M
      j0G9Wmd5YZWZxRnKF9850RSq/fGf/MlPJ5QXzec5MPZTPIgQ++V+IVCGgfL6EF4vjmlgSbBD
      ERy/Hzu3hihmwXW3ZGCn/SH29KFcB3d1DuH1o5o13Kef0KMy+AxBIVtCL2UYGEoSSCVwCpvU
      Q31Yjz/ApAXpEfRndwisPcZdX8IOJhDmbhisajWJigrhVBJN17eUU4lmtpVOxOkcO7VsFrtW
      Y+LX71Mp1yE5gIx3tx1h859jPPsEt+cCtVIVo7KJZhpohkE9myPrBGgtTqEPXNwhQiEE0h9G
      G7gIkS7sxQl8QT/Z2TmKmXUaegB36AbWxgo1S1FyfWB4qOXyNLPrRHu7d1apvV8tkEzSqlQo
      ra0S7R9A93rJLa/ixnoRvqNCR05Adonx3gCRWIh0KszS4jrrVReyK/SNj6HpX1x4mcfvo//i
      GB6/b+u+AsM0aOSyrCeuYiVOFve0P/6z/+anyy/JoSeEREixY6t2TS92YZ14bpqEKNB8/DFu
      zzhCb0dDKqtF81d/hXdzBvfpJ+jVTcbHU4S6UhQXFhh+/QbdF4fxhIIIAf5oiOLjh4hGhVh3
      ipotSYgi/dcvkeqKoRYmqVoCTG/b8uINUFzLEBRNdNPEdZz2CxJwlJVFKUVxfRPhOuieNjPp
      Ph8Tf/9zVM8YqvsCIt6N9IfAsRGf/YL+S0OIiTvkH92l0NQolJq4G8uE+/sRjRJqY5nqo4+R
      qUGE1781BrGzKgRVhaErI6RGh9Fci3xmA9l/ETlwCSu3iTb2Cvb0ZxjXvkX92SN8PgNPKHBI
      gRYINNOklstSWc9Q39ykVreQI9cRHv/zfdRwkvlPPkXkVvCGgixlWzR8Ca4OhUj09nQIRX95
      aIdA7FojXddl6sET7paDtHovnUrk1v7p//g//3S+ct42fnHgl53/C9uiJ+yh+/I40d401rNH
      NMxw20H06Hek/A79t2/g9Rp0jw3uEHuop3tfcBi0A9RiiSCBgEEonSTolEiODG4xHATjEXzl
      FdTqM5p1C4IxZKKX3Nom2bUNNjbK1DMrBKKBzjOXUriWxbPZHOXVFbzeLfOklNQ3NwiFvdS0
      IDI9gKqWYGOBdFCQGBog0N1FbrOE9vqPUf4wEaqEutIE41E0TSM7M4sIRtE351H+yK7lynVg
      6SnRWBDd4yGQSuLWKjTLZeTIDbT0ACqXgVoJ4fHi1itU9DgR00H3bq92u+ZbISXhvj4qmXUK
      axnCl6/Tyiwhe44PEz7yywoBsW7qhQLTFR+tkVehWsTcmKV7ZBB5jNPpZWDbu+7YNrMTMzy0
      UjB09dT6ps65L1m7iuPeY52iB3WPh77LQ5hzn5PdCNFamUP2RTEDfuIXTqcraKZBqKcb4EBE
      qEIISbi3l1CPSyVXYPXpuzi6j+baEjLZhTP+GqWlCdItG+OAqGg3GqzNLFNxDdx4P42yl9m5
      HDFfDm/QR3hwiPxGAZmI4zy5g5PLEPRJAhcGQAgMr5d4d4JcKQubS9TtTVx3GCE1YkNDxNeL
      lFamGP7GTdaWH1AffbO9EuomtRZUNzaJDg4gpCQ1NoqcXSInBGg6avY+2tW3kLEuVL2KJzPJ
      ai1M13Av/kRi6wlc1LZ1SKkdMaxQVxhX334hk7XwBamNv93+G6BZY/SVKy/dCn4w9kgIsXNs
      5sk0D5sJxOClM1m5XoLAtp/49yuQHZRJTaNrbJBYtYqduEZuZq7tVzjPlykEwUSUC7EwTsvG
      To+iez0szH1EsVinFYyhS0GjVKJZKWMpnZLro+XtwVvN0M8aZneA+bkK2dAw+EMIq4mjzyIB
      2TOCNn4bC5hdmiCdf0o4lUA3TVSjikz2Udlo7BKdANNrYPoD+IJ+ehJNZjaXoHsEVcoSkQ38
      sUFA7jglG45q60y6iRi7BbbdFutCcRq+21RmHiKnpukLBNC929zswlYmmmZ6aBQLaLbVXmXO
      AV6nhrW2CFYdXyj+wj6Go9CsN7BbLfzh0M4xpRRWs8lmZpO5lSIZXz9icOzMJt5zZoB2ZOK2
      7eQs4bJmIIAZCOCNHu21OyvaSuF++7juNdG9HpTjEjEcSr4QCyUDUaxj5wsQTaMPXEJZTQLP
      fk8o5KGRLxNOx/FW1yk1LYxv/Kit38R7thY8iVvMohwLZ32Jut6ksFGiNXQTvf8SqrBOhOye
      gC2FN+DHVW0ZtlWu4FZabV2luEn3yACeUPtj260WT371Hvo7/xVCa+tKTm4NrWsEABnvxlmc
      RI8m2cxmcB88pu/mNcwtcUihEFKSvnKFYCrFxC9/Saucx/POv0B4Tg4WO/LdNmvYH/8tt671
      0dIcfP7gS5P/G7Uakx/f47Uffg9cxeznT2gqwVLdQy05ghq82p4YnmMJ0v703/wPP50vvUjk
      4EFZvzPh73hWWw2SJoTSyT3t9hPp+a6lncezev8hG0YvJHsR0TQiOdBWZqMpWh//AuXY1NdW
      KM89QwQiBKNBEqODVBbmsIsFlG4ig5Fdc6bpRdXLeOY/48IPvoNdzFKbncJtVAnVVhkY798K
      bGt7sL2hAMFoCN00WZiYxb38Nu79XyGrRboGe9C2wrKl1KiUq9jDt/blLctgDBB45+4wOpKk
      srqCo3upuxrN7Abx3p4tc3B7BRGahhkMEu3vI/vgE1rPPkfVy8h4F0I/W8AaAFaDYG6O2uoS
      ucUl/NEIga30zfOGx+flwedzZJYzLC5v8swYIJe4jNU1hvCFDlkSz4JzWAGOn+XVofOC7Y9y
      uA9xYn+H+zqu/VHnFI5momp57OwKWt84wl5BNit4s3OEIn5yqzOIYIze3ghdN3d9I2PfehXl
      umwuPSVbyoAvhF5cRVk2IhAj2p2m6Jgkrl0jl7tDOujQNdKOS287rNpxR5ph7OQC+6JRWoaJ
      0A3SQYkZ2KPLCIj1drNSySOi7QC+bV+Kk1kgHfXg8xqEvAKnpaEaVZqeFFathhEIbN2vrX8J
      IQgkkoy89RYz776LNvUxSpdw9e0jqyYcBX1tmpjfxRNP06jWcWyLvSLXecF1XZ5OLVJPj9G4
      8BpCiHO9w0sz2h4m/D1njqTZl5VgsZdR2n/337hEd7NJvVzDtTaQHg1vdwDj8uu4to355ClL
      9x/SHOnf19M20XaN9hOv1XBbRczuLqTQaBSLeEdvYWPTLJTwhaNUChW6xMGQBbHv/aR6UxRX
      nyGSA4RTcs85BUIR60mRe/qEZiB6KAxboVCui6V5cV/9Idgt7HKewsZTUgE/Aok64CmODY9w
      0efHaTapbG6w/uBdjFe+u2OOPhFKoRdW6Rrr2XHC9Yy+nFIphVyByXoIOX7ppfSv4zhtxxS0
      kzReEEcT/sFW6qXJjJ3udxBCtBNQDO9hOVgzDFLjo7iNGuXFRexWaydTbPd60Z6p90zW3q3Q
      aR2FjITQWlNgWXueU+01UO5c54tESGRmoFXHE74IByxmmq5hYtFU+4/LaIqlp89Yyy1gDbzR
      loEND/jD1DftHcfswfcshCDc3Y1Vr7Pw0YdINKxWAzlwGb3/wvGvknZiTHfCR++F4YNnTrz2
      LFBKsbayiR2+9tIyt2QYRfjRHYKbS8cP5sDPUedPh061e54HR9+v5UrKtk7W8lC2jVNdsxdt
      S4qg1WhRXd84w3ja/UtNo/+N1xh+682O5/dCIOgeGaT7yvhOIJzrutRyOVCC7OIKJT1xSEwR
      Hh/q+nexrnx3X8ivNnePrv70iXKx0DTGvvd9TFPDmbqL88Hf4K4vnPyYms5qVWNucgHl7j7P
      eZK/UopaucJMxUScY1LPQehu1xjywms0lybwsooV8OMcuOFRBL8TJ/8lJUfvhiyLHbGq5uq0
      XIlFuz6QLlxM6eIqQdXVCWnWvh6OsrcKIei59QqtWm3Hz3A2iA7OtaPnMc0wqBfyNMolDI+J
      3WhS3VinVW+xXDEQF291JOi9Dh+lVDskIaZjBvZ7ehUKq1oj8/gxQkDfa6+jGQaBVIqht96m
      vLaG3WqxMf0ZItV/rCNJ6AatxBCN8sSWxXqvAeT5cCi/WCkefvaU5sC3kM+h4Lr1SjsfpINp
      VimFu76IjHej4zro/ePo059hG2VE4GwxIl8G8R+8p60EFceg5XawICloKUnF0dvkpx1UnI9m
      As006Lp2FatWxxMKdmzTlrEPzuzHr3B7GXcvqtkciw0/plXFU1ikUamRsYMYr//oxNlcKQXF
      Dfqac0QGtqM93T3yf1tXyC8sYPtjeKamkIaOlBrRwUFq2Syrj5/AKz840YuqlEuwMM/Fb11D
      07QtJ+fhjLqzoFVvsDQxxfDNqzRsl8f3JliOjCOfY/Z3q0Xsn/2fmGM3UNffaR8UAupV0DRU
      pUhs7T6NjafotcWnFKYXkele7GAYN7DH2fAlzexnhVIgUYR1C6WgqTQcJXCQ2EhsV4ICXTqc
      dZYKpI5Optj+4NuKLRz3zvaHVTutFsXFJYI9fZh+HwJBtL+f9ckl6sJDtSExLRvtypunN/FV
      8niDByNat/UGQX5+Hi2WxLnwLZaXJvAWlui9dQurXsduNrD9Ubzjt068jRCShhGmnC8TTUbZ
      tsu8iH1mbX6RcrFEZmGZybU6+YG3kJ6Dz3IylG0h7vxHAkEv3WGbpckPsc0AKrtC3GjRKpdJ
      DvSQvjGK1bLQ3YAfOxE/3NEpCOX5GeT5rut0P4HAkApDtkUbpaBm6zhbxClR6MLFRqB/AcWc
      TtJt2kwgcV2X4nqW1c06/X0xIv39ZFfXsVotItUlKqEwFgqjWoQjUvrUVlTtdn6wSg+x+uTX
      jEQjOzE5e4lS85jU1tcxv9GFMkzqn66geTys3r9PYWUF2XO6ADIAOzXM3OQH3IzdRGjbs//Z
      wqFdx2FldoFKqcL6RoFGsYIxmCA/2HMoq++0sKfuom0u03P7BoZHR6xlMHxhBvsDxLuHKayu
      0TU+BgI8fGVKIx5lz9/rYIPD/oPDqLtt4jeEg+MKlBBEtNbWIv3VgeH1MfT6ayxNPGN5cobS
      8jL50CAhr04w0kt5cQPjtT9Exo7OZlLPPsPXylM3Yzi1MkFVIeA3UI6zY9FTuDsrVXxoGLtp
      sTLzAPPaW1iD11i8cwdvJIp7+0eYXSfX0dlBIMJyaJyetU3SfUkUDm0z7+nh2A4PnuWoj7yG
      iHtBwFNf6Lm/U/HZRyjbR/jyt5gPDuKb+RCv3WDgUg8xTwHh99B98SK7eR7uHgY4R1Po2SAO
      /H+/d3j/jNqeZfbZyQ+gqWQ7+EsoHCEJbK0Mh8tsvDg7dDLl7l2lDibY7wYEblmKDMnA1THs
      CwM4zRYbswWE6ZIYHSE20M/63CM27AtoXUOH711YJ25t0nt5BMe2UXgxPP0dSoDsjkczTRLD
      Q6z++j3c/ovol96gZrUoT9/DvPFHZ8oREELQSo8yNfsuoYiPhSfPuPzGq5z2va6vZHj8cJpm
      9/VjUxbPAqdZRRt6g+zDv2Xh7ufc9BeoV7I0ol18Y7ABTo0P/sNf04yM8fb3rvDs3n0kjoOn
      ViZcKmNkN9rph1+47L+3MNXBWX8XWxVykGjtkIIDQXcKRVRvkjLrmNIhpjfwafaBSe3o/jvj
      uPZ7S5YcZMztc+6h4/t61ySGz0thbQ196CoezW3XAPKa9F6+wLCzjJi5t78YFyAyM3RfGEYz
      PLCV4P/k7/6e6sbmgUJV+8duBoMM37iM+O3/i/XwPfRb38PzJ/8Twh/irBBS0vw/QkYAACAA
      SURBVMRg4ckzpj99wOrMKUyoW/B6DHL5Cip1vg40e/ljMvN5blwZxqfnWWp6ePj735Iv2+DY
      2A7MP3yPhbkVMgUvurdcxB/uRtk2Ir/Mdqm9l4eDxHTwXvutKWqP8LIvsA2B2gm+Ozxej/wi
      q5Wd9L52HWA7Y1WgXIXUJK1KhaxMguFB0/YmxDuEutIMFMrMLjxBG96tyqxSQ6wtTBL0GWQW
      VmiZYWwjxMSv32Xk9VvERoa3gsMOOx3jw8P4olEmf/Ub3P5xtPTzlzqv1+pMTnzGhVtXSQ+e
      zlzsOg7Z1XUMjxfLcc5VENciCURqkGK0h43JGEPj3YxeGiHkyeKsP6WevMrFsAdl23hMA10f
      fxWzZqCsFtYni7TOOxT5DDhMyNsfrk0+20R0WnyR2UknYy+jCpTjMP/pA5Q/hKUHcEdfh9wq
      0th12hUXFslmsqQHejDmH2E168jxV9u27UCUjTUPmzKIvHEN4Q+jC3BmH7E2/5BgOoURCGwx
      gbs1WeyaZz3BILFUnOz0PWSy97lDmZt91+l1clx+8zaadsq8YAG6qaOFY1hH7M7zPAgNvgLe
      BEN2nczHnzI2fhmPlaXZchH9F9A8PkYy95GxV5GtFlaqp+0HsNfX0CLJfVXE9s1WRz7HMbbu
      rXIe52dNOhw5+nw4a+J2p2C+TsdPB8ey2Jx4ihmJUQ72wuDVdjac66A/+g21dJpmpYJSsFJ0
      sEbexJ76Pf2XR9lcXaPaaqA8fhACGU2DlG1b+Zacp4/ewKoVmfjZP9B97Qrpy+0YmsLCAuV8
      iWgqSainB6FpCNOkNfEAeeFVtHT/ccM+EjKawiwlkJoOdNqcZD+2d3WJd3ehLc9yntWsjWA7
      GcgYvIHPCOIW12l6xwnLIo4y0aRJrKuf+fUGze7LaIledGW1qNz9JcofxIolUGegjY5K4MGs
      nY6MdBpT4bamvtdptKtIvojT5exMAAfFsOfVk6Suo3lMlqcWEe/817v50EJiv/FPydcr6EuT
      lGwdu/8GMpKkdfsnzG8uwvAF8PjBdXDu/B1GvIuW5bSr4O0Jk5CXv4nlKhq13bKAgWSS+UfT
      bMzMM3j1IqmLF/GGQmC3XmhOEVKyWpE0qw18gc7OwoPYWFzh3kcPqb/yY+RLSqLRekagp50z
      kSmsszE1h9ZYxem+gLo6sGPu1X7ypz/56TNPCCcYRu0pyHSy+CBoZyxtEejWDLRTs/KIy0Wr
      QcKAcHrXwXRaUWW3nTji+PHHtqHU9lgPHm97jVuuRBcKIXaV8sMlE58Prm3jCYcp1lxUz/ju
      eIVou+5NH5VyDTVyC2F4cTcXcTcWkf2X2rHvWwn0MtmH6w2iDV9viy9b6YFiK7leJvtwMou4
      2VV88Vg7vzgUJF+sky/WqS0v4DbqODf/ANl79kyqvXDCaeY//D1jo91HblIIW7O/4+C4LvNW
      CLf/8ksvr6lcG9tV2KE0ou8iIrh/1x3phiIgtX0z/2mcOQK2lq+jk1+OurpTXfmDEZKdxtDZ
      mtLJXHpwDPvPNV1JQ2k4B4ZRdXWKtkHN1am7uyEEh0Mnng9O02LiH97l83vzWGNvdGwjDBN9
      7BUwTOT0xwzIDQJWob0zjRC71iBNx60UUeV8uxaRUthzj3Gyq+1+NB1r9DVWny3y5JNJSpl1
      Qt1dXPnmK3jSPVSvfJ982UI4W3urvQCE1481fIvsVmHao6EobGzym98/xR5+5QupLdtcfspn
      /+H/YOJnv8B1OuSlH3XhUUS86/ZXW2WBDhZlOizuiCPPHdX/WXE2y5VXc6g4BjnbQ0i38EqX
      uiupuRp+zcYnHbQDNYJedEsg5SoWP/mUZiCF+cYfnqx0ugpZL9CoRan33kB6/e2aqJMfodIj
      0KrR21rC3VwjN9NC+aPENZAbqxTtJio1gAgnkN//VyiPj6XVKeLTMwSCfoZSPhY2F3Hf+CPs
      tRn085DDQwkWluYIhQP4Q0E6iwBt2rECcQzz7GEOzwedUP8Y4dRFCk9+zez9Z/S8/SeE1DLP
      Pv6sMwMcF89ynMDYXoI7ndG25Hr3RALfK/MfLW+frIieJLJ4hE0NnbJjUHcVlhIEpE1A61Sb
      +8UV8PzcPIWWifGNH57K4iI0DWv8W2xq+k5AmFtYJ2G0yFbzCNch0JUmEA2TbDZx7BZOs4Uv
      NopvfoHV2TyM3ESGYgA4g9dZrxRQpSy+wgJuZgXXH0W/cPu5q8TtG68/xAIJ3A8+5Rs//M6R
      s3soHsVk/Qv3NAHUiwWUnWf+3vsENiZoeEK7mqTY83M09sR+q10FXlgt9M1VhNpN99hLpEo5
      uMqhLWe9mKdZ7fz3+V+hrQRFp10JTyGwlCQgbfwvyXegXJdKUyCvvYU8g7dVhhP7oiFlrIts
      XSJ7L0BqkNL6JtAuL2MGAvjicYQQJAb7SFTmcBef7lwrhECGYmh9F2heegd18/s4Tz7AXZs9
      t+cUPaPUjQCObdP5+6h2hQf/4dizlweD2IVb9F2/Rj2/jifSg+HxERnpxxOIdV4BOllu9sd8
      bwk1ysGbWUNml2n0jyOsJtraIlb3ANJ1UFsfe5do94TNqt2a/FsKxaFxdF6JdteIQ17VI61H
      u6g4OpaSuKqtqEsUQWnhkc4pwmDOZs3ahtVoklcB9GTfqdofBaHpyJvfbd/VdWlZTkfRTEhJ
      8uI4hc9nscMJ8AZ2K9ABQjeQid52mPV5wuOnkrrCxKcPufz6DQSCSrFIeIsxlYLCRh6RGjnf
      +x43pL4htrdCGfvxv8G2XaThQUqX3noTHQQ4TtskckQcUEeF1LYIrMzj+kNY0S70fAZRLqE1
      6viqZVpeH83BcRCyXb9mn7IqEFu8p9g/W2wT8clmxtMxzMFjXukgXYVHcwCBFArvS/QaK6Uo
      bRYQqbMXBe4EsaUI208+wmPUDpVP34YZCHLl9StsTH9GdmGZ1tXvIruG2N5XQQgB0fTOtq/n
      NTYrPUKpusL7/3CHmtKJ+XWuvSIJRmIIAeuZPPJiZwPAy4CQuwF60vSxN7PVDJpIXBdzcRqc
      /bLvcaKQaDUxNteRCBqJFFbfEK3By+C6yEgC48Y7aIUcvoUpzPXFLavPlvgjJFa9Tr1YoLS6
      ghAaX6TrWRMuPs3Grzn4NfulEj8ASpEt2WiJnvPrU0iMC68gfOF9xH+wGp/QJOlL40SGhpHx
      XpwnH6LKu74Bt7iBNXHn3Hd7XOu9Tfbqj6jf/gkr8Ss8+PA+jVqVaqHEuvP8tYheBqTWqGLW
      yyA7bPlzhE6gFTcJD11BhSLtGaVeQ99YRpge3MImbmED/x/8GYE3/ghfII53dQ5fbg1vLoOR
      mWep0ODBR/eY+uBDXKs9E2//KledQhd5HiiqG4s8/ugupUrrTNfV8gU6s8kpvNyuou6cX7CL
      sq32KhCIkm8I7Obus+wNzGMrEM+xLJrFAsqx2vWPvLs6iMyvIRafgNXscKfnh/D42yKXlJDo
      Y9NI8dHPfst7f/P3NIzTOcu+KOjeWA+e135EfXUaJxI7vrVS6OU8fjT09ADNuc8xV+fQCnm8
      199Cu/o29uoc5uXXd8p3iEAE07HankrXxclnaCxNoco5GvUmsw8eMvzKVZCw+miCestm7NXr
      bO+OuC/v9wUUX6uS48Gdx/RdGKZZb6KC5k6/J2H1ySS9b32Tzoa7o/0N2+fVOdm7nY1lVKuO
      3ncB7BaqVgaVPtDqgA6kCXyRIOVGFa1v1/GmGjWi9ibmhQFWl56ij76czS2EpuNcfYfN1f72
      rj6D177A9f5k6CKcgCK7+QDHQNgW3kYL89rb7Vr4xRxGIIzvnX+OTHQjhEQmevZ72g5YPXTf
      KIHuYdxyjur937Jsm+hPpojGI8zmmujLM8TiYRIj7Rj4wxGgnQjuZMaoFtdIjtxm8FIaaHHv
      b/8taxXFrR/8mJX3/jPZegt/36tc6qpx99MJ4he/xWikxMcfPaZSNUjeGOGTv/85ZS3BD/74
      D/F6O5kyO+kge8f5YpDxrt1El0qeRMyD5jm+oJWQEqFc3FIOGd+N1nQLG7jlPMnbr5D57R3U
      wOVDNYfOBUIgNB2tf/zktl8CJLStAqJSwlhewLO2hKwU8U3cQ8+t45l9sltMVUharQau3YJ6
      Ff+bPyHwgz9DS/buOMRO490TUqJFkoS+/c/w+yKszswz8bv30dYWkMplanaNWr7Y+doDBtvT
      ikuG6adVK6FcF6deIF+wqefWWFrYINh7mT/4b/87Et4KufVNcC3mH06xXm7wnX/1r7n1yjDN
      cpZ63WVjcopC/Qwig4K00UTl1lDWWUSvw2jvLilRtoX32Yekxi+cvCWU61Jdz+B+9kvUxlJ7
      4qpXYe4BieEBNF0nmQhgP/nohcb2dUWbaq0mvkCM4MBlQrd+QNAGo/8KfiOAE++CbceNUhih
      GDRrWMtTbcJ/ASeKkBqeq99EG71FMzWI5tqg6zi1GlMf36dRKp+il72+h6Phj/Xi5p/w8//n
      37GwUkFKRbR3gJDPxOP3IlDtnUYMDc0XJtUdJxoy+d1f/QWzy2U0TQeh0TU0gKGd3pchdY1E
      T5j+6hPE5Afno3C6Lhg+WrXqyW2VItrfy80//ieE1x7gLk5gTr3P0FB0J+E/deki7tznqHrl
      xcf2NYP4y8kN9Wl1i4i3qxe7LrgOjclPKFk18PmQlRLBwgb64A1ajz9AWRa+7/1LtOTzb7i2
      DaVcrMm7ND75BcKx0ZSF7Q2S6O/hwrffRMrTiRBfRCbb8yvngrnHs1SG39rZXvVFoJp1jJmP
      GR6O4zm0t9mh1gDYjSaLdz5m4JvfQPeYbPtkqtksc+9/QHPkdYxLrz1fsdyvKbblln2hkUJK
      0HScahE8XmS1TKDewHPt27SmP8OyW4hk7z6Z8kUghETvG0OLxBA4CJ8fzWqRX1mjlj1+p+99
      /bwk9ep0XvKToIiEPahy/oXG4hY3UcpFeHxYI6+RXV4/8b7b0Dwmg9/65g7xb8MbDjPyztuY
      83dx1uZfaHxfN3Rey5XCWpqigYOyLELNJt7X/5DSzGNaOAjDwOgZORxP/CIDCUbxjt9uR0Mq
      BxFOYIeirE7P7Su/18bxMUlfVeheL24hg/X0U+zpe6jW2c2PqlEFpXBWZxEeP/lsGbvRaYur
      DvnHQuwU991t5SINHU84iGkauPmTGOofFw4xgHJd7OUpanMPcKWGt1jEvPk9hMeHPxLHqJTx
      X/8Oxvjt8w1nFQLSwxh9Y7Q8YdxWHTOfIbeaoVmpsp/ov9hQqvMSrQxD0ifWuTpocG3YQ2zm
      N6iHv8Yt5U6tGziZBVStjEy3t2JyfFEc63m8uXsZRCE1je5br6DWZlCt894z7quLfQygHIfG
      k48orE6jrCbBaoXg8JX2DogAhhfz5jsYo9c7lN94cWjxLuTYq7iaB1kvoykXykUefXiPwsrq
      gXjuPYF5R4ROvKhI1KnqxIvAG4mQvHgB0+9HN036ro5x5cYAieznqMIpZ14hafz8z3FzGdxK
      EVdoW0GJL56zkJ2cxM6tt8Ou/wuBhLZ3sTn3mMZH/5lqaR1RK+OxXbyv/xCZ6kPZFqpewRy/
      hXnptZc6IK13DM/l13E9QZQCzdBoVqo8vj/F6qMJtguOwOmIUnDQcPrVgiahd6yX1OYD3NXj
      Z1+lFM7iJKpSQBgehG7gtYoHdoc8K/Hvtk9fu0Io6seefdQurvVfAHRch/rjj7FXnqLqdfzh
      BHrvGMbI9fZm1Uq1M4Ya9rnK/EdBSIkxfBVVymLNf45s1RHNdtBXIafRe8DTuRcHj3XKWT6L
      R/noIlcvjoN9py8MEthYIzu/RDl1BRGKA+qQmdl844eoahkZTeIuPqGnJ4JunnJji2NGAwJ/
      PM7Yd77N7Ad3aKb60VJ9X8g3/zKhN5/caW+2HAoj0inc3Fp7dtky1bVzUDVE6IQwiXOEMDxo
      6UHsyU+xTS+iUkJ5fG37u+LU1SbgMBM8rxhzXht6HMW4UtMIdacJpF1yC4+pLlbAMGlaikZs
      GK3/YluJTQ3gevO4T+8wEHUJd3W98Jj2wgz48QV8VN7799jdoxi3f4DweF/aDpBfNnQt3k34
      dhJ94CIoF2thEr6wdLUjIATawEWMG9+G5SnM136IdfeXROIRdnIRnnMm73CzPar18f0dnSNx
      ehw17m0Gk1KSGOoluZXk7rQsHk9moP8iANbs50Q2HtF38xqGz3uOE/TumPpeu01ivIRVq7P2
      8V/TCPag33jn5YRKfMnQtXgXmnR3llpz9MaXPKQ2hBDIeBpv7yhC03Di3Whb23q6jnNs9YFT
      3+OAZen4xPrzw0nMe7DChtgzIcloGp+1jOk/S1jxSTnT+89rpkEgmUApRatSJrOZ/zpanU8F
      KTz+nbzRrxRcF3NjBvHeX+GszSECETYnJ8lOTVNcWtnZmeT5lduDvgTR4djxOEjEDVejZBsc
      clt0vPvhn06QuobfLe38W4ulydfO+rydBrT3eY8ecGJ8nK6+GNbdX+LkMueeO/Bl44suBX16
      SIkV6sbwepDhBPrF16iU6sz89j2K84s7VoqTLEFHE1en6hXblc12N7446me3l91+Wq6kodqJ
      9ucJVavgrC+gbAt7ZQZb9+yr4nc8jmIWtef34JmtdypAGhqBkI/RwSD6g5+de+7AlwG7VqJe
      acdRfXUZAJBDV7B8Mdy1ObRoCvMP/jV6spt6qYRj2VQ2Nk/d19FM0Cb8zqHWx/12ukcbLVfD
      djukkZ7Rl7DdWrTqaE/ew5m62/bJ+MK0avVT93IWdBqfP50i3NuN+EfiIGuuzbG51K6f9JVm
      AGF44OYPsBcmUHYLLdGDHHuV4soa07/4JRuPJ84k/pyu7fasuJfQt5nk+NqXAc1Cx0UJQUsd
      /WoP+jE6/XsnoUUK+m5cQqWHkH3jyEgS5Q1RzGRP8Sxnx3HvyG2elum+PvhKMwC0S4GYb/8p
      TmYBhMC4/hbG+G1a1fbujUodb548OOvuF2Fkx2u3VwTRYbYXe5jhoDgkBfg1G4GipTT2isud
      fBSnhScYoCesEK0abnETe/YR3ujRm8cdZKSjfo66pmOftoNv7NpuaPzXGEKTOFYL5TS+Klsk
      HQ8tvX8TBWP8Fq2lSSIDu9t5tlW50xOV2FH+tkLAj5CHj181DiuQXumgCZe85cGWAkO8uNIo
      hCA+0EV9coKs0YvHreH1vbhJ8sT35SoqG1lKuTLVbI5q3UGLLbULz36N4eseoH7vL/n4059v
      5QPUzldpe9lwSzn03/xfSI9JpK8XIxAk2JXCEwzsCBMHcRQhb28it58BTm9ZUvv2LdtliLzl
      wSMc/Lp9oH3nHOfT+DWcVovS6jrBZBzD5wN59DjPw4S7NjnHOklkvJtE4QmN7CbVi98/ty2N
      vgr4WqwAB+FsLuP1GLiuy9In9/CEgsRHR+i5dROpteX05/UU7x5VHFeC/aiiXdsrihQKr3Z8
      PM1ZwzQ00yQ2tL+Of6fxn+jQcxX1agOaNYSmoZvmzrZKpj9As1KhWKizoXejj9xATX1MIGiQ
      a/WfSzLPVwlfSwbQBy9T21gg6W0w8t13WLrzMZtPp3Fdh/7XX+voHT06lGE3pfI0sUSHr4VO
      inFIs5AdxJ+XEZC3d5ynYfy5B9NUvClEMIG7OAmVPHLoajsEZimLawYgcQkZTqKadSJugdJq
      kVbBxui/sq+0ytcdX3kluBOEbqC98UdkWiEyTybpunENR/ewMbfK0iefHumsOSqK9Gjl73jF
      8GiTqGA7i7NeKuNYnQruHj2+88Re34Vr2aw/maI6/CZy5BVEahAx8gq+oI9gYQ6FRF18Ezn6
      CjKSaj/d2gyRoIE/GsKsZLDu/47aX//v2HOP/lE4xb6WOsA2lOtgT35CsDRPNBVlfWkDu9ki
      EPaCprNXJDn89za2Z/+DxznQ5ijsqt9i59+7OkV1I0usK0HfrZttx9KBEA6lFPn5JSx0IvEg
      RjBw6hzoTiM8Kl6pVqqwMJ2hoQfxiBaG28SjQ0FEYPA67sITtNI66tKbyEg7WV61Ghh3/obh
      25fxhILYzSaFxSWEN0BmpYB768cI/WspROzgaz16ITX0y9+gnh9ETfyWgFdjPVengI7V13ek
      x3b7CByMB+rYpNOdd//aikztxCIKBUPdlDdXKH7wKVIIeoZ6CXen2ztE6hqbT6dYmttEu/gG
      q7N5eiJF0sPPV0T3qCA7u9FkYXoNZXjoD9vEB3pxbRs0ndbdx9TFDfTL3zjwZGA9fI9YyMQM
      tEUe3eMheWGMer5AbXYKIzmKPnz1ucb6VcHXmgFgK3As1kW+JWk1bPCHMSo5LG10R7o/bnbf
      a/c5aoU4Htubd3daJxTg0ujqp+G6oFw2F3JE5lbaVTWEooYf7eIb6CPXUMpl/fF7tB5M0HVh
      CMN/dFTuwRn/SPu9UhTmFvAbgp6LaXSPSX5+gcrKGjURoBkdRNsr0ysFQqBsC5+hiPT1YTcb
      SF3HqtUx/D6cVgvNbuBsLKENXEKcQ2Dil4WvPQMA7aoSiV4qwsGcfoh7IE7msGhyYo/szZc9
      jgl2zacnMIqUgMSKp8nXK8SlQWvoJoYvhLU4ib02j9Y1iOq9RL6wgbdYJ+Hzdsy7PksoeHll
      lcr6OpGhQWq5PMGuFJG+PnzxBNmZBVqeXSZzMvMox0bvHQMhsHQ/c0UPZIpouDTmJvHQwmra
      eMMh7MISqlFBBI52yn3V8Y+CAQC0aBp95h5uNIEKH4xu3UtExxHO8yh1u4zSeRXYP1trtQqB
      XBY72oXeatKcuktzeZbAGz9st/WFcFtNyquzJLo7E9apTbxKUVpZRY8leLSYRzQbXK43SIwO
      4Q0FANUWhTaWkKl+ZLwH/v/23ivIruxKsFvnuuf9S++BBBLeVaEMqlhVrKJrNslmkzOjnon5
      aM2MPhWjmFDoRxEKfehbofmaiAmNQq0QxZ7o4XQ3m002TdOVYaEKQKHg03ufz/t37z1HHy8z
      kZlI2ILLRC5ERUbmu/bV2efsvc82KJzhS+i9R9GOvLF+LVdJhDKwM/PQ/xLywk+wmtuxPTvb
      LbprBECLNqEX89R6B253u9w0MW+/AXX708eT8XU/6sJAxeLouSUYzmHHksi+g8ipK3inblGq
      lRF2DTu/TKItTrC1ZfW5G6EWDzL4195DCEHzkcNc+PQm9ZYutGKeavF2Nbl4byfpTy7jukCs
      GdcbxAhGMGau4Uaa0Jo6N+QmaA07QdNBSdyz38Y1LHRjZzpQ1tg1AiD8IYTQEHYNZazOSk8g
      W+phLtoQNg3WexsLdJ8XiRcZCK0fp3l06kYcZ34W0+tHd2rUTR+j1yeJlsATT2AFA/h0l4Dm
      wD3CK7YKcTGVwVndvFJCNMKoVycGy+clGfeRThUxystUNQN3ZBSVW8QdvYyW3JwTvJ6fLHT0
      lp4H/h6eZ3aPAGg6MhRFbbtTudnnf8e5W3dSV/3b29c9egB9f8u1FWvtoNRdjXJjeZFgtBmj
      a4Da4KdUvT7qZoCiv5Pi0jLRWg2VSGIJiSncO++xmj6pVpu3KaUoraSYGZ/BSTZiqZTPz8LU
      NLH2ZWoVm/xymvr8PIFwiJYjB7Btl9n5HO7xdzD3n34ipW+eN3aNAKh6pTHENozNuw3stT/f
      M4p0tfXQ9sJwNyHY/u+3B33DuBYbjlMoqNXR5ycxvvwa5ZHL1J0qbls3djaDT9PQ+09THL2A
      FXXIYZE0q5tWASUVE1dukMoW1+VKoaiZPurxTtD01X7AUPCEGb4yibb/FDFflbbTJ6nkixRy
      JXJVDffV7yHibTvas/Mw7BoBkIUsjrW5Vv5WvX5tEN9Pj94682/fh+tRVoK7rD66gd7eh/D6
      qMk6sq1R9U13G82xcWw8Tokmr4NgdVdZQr1WJzszx+L4FCut+1Atye1vrsAcH8JCwzr+Jkas
      Gc+Vn9P5+ilmboyR0ZPo7cfB8qK9ALP+RnaRAGTY1AGNe0WArgrCPVSd7T+7d/7s/bi9ErDh
      OgI0DSMYw8ksY3tD6EIDKfGUS+Qu/47I4VcI+TR0AdJxGLk2QaGuofuDKOkn74mi7lKxQavX
      CMxMYh5+DbOjH+HxoVwHFUoweW2EYtcrGLGtXWZeHHaNANilAvIxlu3Y1HzuIYRgY7jzttdd
      Xwk2XL9awYi1osdbMGdvIUNB0HQqXfvQSgX06WtETvSDEiyPTZFfyZA1vIhyueGUid2l764C
      38oi/q/8i0Z23dr9dAP74DnqrosWCN/3u9jN7BoBcOpVlEd7CKXkbkbuvT7bmiq5HQ+iGm0U
      ItHYeXUdhOVBc93bnX+FwKyVaW2PsrKcpzI0RaWukE4V0dYFmtjQJXgb9UpKNH9s0+Bf/8wb
      eApO3+efXaPwecMxNOd2C6Kn4dP/4qwmtHj8uNnlRm3Q4O0uilq1TCCXYqmkk44eICuC5F2H
      YkcfPEjAnJS4lSLOho7xe2xm16wAerQZIz2F7W1s7T+tja1HZ0M2l6ZRElDJzOP6w+ufO8Ki
      6kiwXco3z1MLBFHxJrZNeABQCqEUqlTCKOXx5NJg28iW7u2P32P3CIAsZnBNzybj9WGEIHvp
      U8ThE4SEzfLMPC39ja6GCoVbWqFU8mCJIka8A3MbD2HmxlV8B4/gkTUmP/gl5YokdvgcEb/C
      09qGvtH8VTWKS0VCLQnWss5UMIyzxX7QPRblA8cpKwnexH00K4FWreC9+jGa6UWLNeP50vfQ
      QlEeqFLXC8quEQAl5aaZcXvX5X3Op7GBpJQkP/Y5i+PTGMkDdO4LYZdKTPz+b1Htpzn0yhFm
      P/kIq+M4bb1RZs5/RGq+zJGDR1Cujav7aD9zmnDc5Or/+wP0zj56z77G0qXfIyP7iHlTDH88
      RNfbf0TEzDM7NEPbK2/jzF5kcb5K77l38AdWDXrB3Wf8DQjHQdiNFrbWkVfRdlnq4pNi19gA
      Zs8hPOUym0qVqAcPHBOrdqlQCuVKaoUira99DUNmkNUsNSdE5ytvcuidHWXfjwAAIABJREFU
      t0lf/oBisUb6+uekpkYJH3uX3uMHG/E6vjDdp09RnL7K3HiBjpfPcfDr38TSqrgurFz7DO++
      E/S+9h4dvRHGz1/ArqSYvzFOKZPGF42DkquPv33pkk3PXathLExjTg0jXInZe3jXDn53tT/a
      42TXrABCN0C/Hdr7sPp/oDPO6McfkjEcPF2n0FQZwzLRNvTUUrUcs1evE4nE8Rs6/nAM06iT
      vnkBp1AicPg4slZmeegmUgmU46CrIjOfXSIWMcGKEoqDQqcwdQUzdpZgczMiGCfQFkcvtLA0
      MUW+tRNfcM03f2e8/23VTmCU8xi5FEiJ4YuiP6bGhc8jwvSul8EBkJVi43eP75Hbde3olMit
      OOlFCiMXqIciILTbPvkH+nIU1fQSjjTxJ2Iou4YwPch6Dd3QcF0dISuUizUCsTCVVAqsAP6Q
      n0omBboPXzQCuNRyKWwb/PEEQtYoZwt4o1Fq2TSa5ccTClLPLaOsMKZmU8mXsCIJRL1ArSbx
      xxPo+r2y2RoCrhVzeMYHQTq4TZ1Ev/S9F6bFqSykqV/7CKP7EHqi/ZGrVewqAQCoD12kdvm3
      VLsP4EYTSCXRhPZAQrDRbthas2ftcxB3bIzdGeZwt5IpD8e91DeBANfFe/MiuuVHjzbhffO7
      j7dx4XOMUgrcRlqnAJylaaiWMHoOP9R1do0NsIbZeww7mECGIo3a+quRknetFLHhs027v1vC
      JbacxZ0RpuqOvz9u7qhOretI3QC7juf0l1+YwQ+N/1fCMFc7GIlG3dhEGzxkpYpdJwDCtAid
      eAOtUgbEenDX2kDfOqDXmlBsey0Emtj6FW2XXH+/L/1hy6rcvbrDVtz2XpTHt6tq9TwKwjAf
      evDDLhQAhECPNSNsufqFiE2G0xoPU9Nm+xXkfrPt5hXh3vWFHh1RzCOXppDphcd+7Z2GFoo9
      kMt40zlP6FmeKVogQrT/JGY+u/63jW2HNv58WG6f90UH82O4jpRo5QIy0ozMLH7B53kx2ZUC
      AKAnO/BIoFpe3Uu6u6pzP9Z7dd01QO7eg/juM/8DDH51j8jSYh5RyBE88QZG79H7X2uPO9g1
      +wBbEULgO3YO/ean4PVSXxyjGkviGiYNu+mLGoxiw8+NQrD175uTYR40PGP9mG0OFXYNc26G
      0MBZjLPf3PSZcm2qhSxK6XjCUXT90ec45daRWOzm5LBdKwAAWjCK56X3UIUMGgqtWqLouih9
      LWxawTb2wRdjYzj0vXIHHk31EXYdX75I8Mv/zbZtS+uLE9z43d9j+YN429/iwNmDj3QfAHf2
      A+bNd+lqe+RLPJcouw5SguXZ3QIANBK7g1GMtl50u4524Wd4Ax4MXSNXk1SiLSjfo2yiPFxK
      5BdGKfTMCn5fGO+Z9+7Rs1fDG28hEAiihXwUxi8xev4C0ePvEtTmWR4Zo+nEy0x/+DEuEo/p
      YLS/TEesiur7Eu7k+5jNh5h9/8cU5oZo/fY5Jn7916ws2hz45veJRHa+t8mZHkSLt6Hq2d0v
      AABC1xHhBEq6hHsOcHwgjsfnY2VsinQqy9LiAjndjxNLrhbVbaCVC4hCvpGwEokjPVt78z74
      LP4w1dy2Pb9SJpDowrv/xO3yJHe5k+EN4o03Uy1lGP3ox9REmNStYVRzkebXvk9I3SRx+k/w
      lt7H6HqX/Ngn1NIZ6AYnO0+h4CF+9tv021eYdWzqpQL20hDzE28TObnzBcDoO4YQgvzl370Y
      ArCG0HTqoVbsagndMJiYL6OFmjg4kMQ0NebGZ8jlSuvj2qMrjrx+BqFpTI5MMVh2UP7gvW8C
      3Ls6xKMJgV6p4Dk8cJ/BD2CTHf2c0mwcf9+bJLv7mFusE2pLYvg8BCNByAp0y4MhI+iBCELT
      sQI+rv/X/4RWW6DvrUNM/eovWdTyhF47TSVXwB+/Xzj2zuG2/efZfaEQ90MpSXDo9xw50sYn
      V5bh8OuEhn/H8dN9q59vDIEAVr0/SkrGrg1xvaDh+h5ECLa4OVeLzq4jJcKxwXHQqqXG566L
      8vmRwQ0lEYUA6eLP5Qm++s37Gu9KSaRtoxDoptmo4uY4CN1AE2LV5pGN51OrNpCSIEDaNmg6
      mq4jHRsQaIaBchrXE7rxSKXbn1fylz9+sVYAACE08lYTlXyRmNch4zrkrCaKmTyheGTTANvo
      sRGaRvfBPmZ/d5GUN4BwbPypWRzLRy3avFr8dpv72TbUqxjlAq4vhFASZZogJYFbl9AOvITe
      cwJVLqD5g7hLM1RW5kHoSE3HjiUQtRpicQrqNbhDDbvz/fSN5WGEjmFtdeNoawev/mz8vvE8
      fYONcXd7Y2ejebwvjgDIchHh9SM0Db3nMDfGLtIf98Dgr1ixWpgemufwq8fuWTvI9Ho4NNDF
      9cEphBCcOXuIWrnC5fEViqGNqYqNn1KBls0QRmB0HQNNQxQzuOUC+UoVN96B7vFjtPWt39do
      24eRWUQLRpGFLLnhT3ECAWyvFyc9j7nDOzQ+a5R0EautXoOHT704ArDJYNU03I7DjKWn2Nfi
      UptbIusYZOaXiLe33CX2vkFzbxfhZBynbhOMRwHoWVzhRr2K8vhYG/zG4iyiXMZ36Cy+7oFN
      K4Tu1ElUK434la0rhxDrMf16opVApptccZl6537qI59hNHc9gB2wx3YoJbGHLmHuO4G7PI3e
      3L17d4K3ovlDm2pdOjPDVFMphBC0NgVQh85xqxBm8sYY6j45tN5gYH3wA/QcPUhzJbUejKWn
      l/DVakTPfQtvz6E7BrkwLLRgpLEiWdv3AFhDlfNodh0Mg7pjo+rVR3n9PaCx7eMP48yPIStF
      apd+/eIIwFaMfcfxixqecJjm3naiy9dRrf1MuwlS04uNdEqlHiit0hPwc/LMAJ6lGQD0lXk8
      x99EC8e/8I6z2daHcBp1Pd1gEJlZbATn2TVUtbwrGtU9NVbDps2ew5j7T+J56b0XVwCEblA7
      +mU+m6hz5cOrNAdcuPEB2r6TDFWiLE7MbRr89xOCQDRCTFYQ1Qqa1wePqXmclmgnIBWiWsL1
      BbGzK7hzo1R/+QOqv/0r3OnBx3KfFwEhxHolvLV8ghdWAKCxL6AffInyyT9mMStp0nLIYg6S
      3aQzFZQr1xNq7kUjXBpOv/0KJzwlgtioeu0xPaOGdfItvKUilEvowSh6cxfer/7LRoM61TDs
      9ng0XmgBWENYHkrlGu37u2HqOsLrIxPqZejyCM5qzX2l7h3Pr5TEE/Cz76UTdA8caMSmPya0
      YAxf12E8hTxGvKWhDs2Ngm4gC2mciZt7qtAjsicAq1SlQXY5Q7I2jzM1hGjvJ9V2muEL1+6b
      U7wxR8B1XNIliQg+3sZxRucBIm/+SaMhnWEi50aQqTmMjn5UOdcQiD0eipju7gnAGsbJt5kM
      n8ARBklnAVnIoMVaSO97m5HPR5BS3nMVEEIgpcRxHKrCs20W2hdBCO22x0gIjKPnUNUyeP0I
      jx+ZXcGZHXms99ztvBqsv0j7APdGaDpEm8gd+grea7+EcBFCMbRwgiXtLNy6Qt9AO7qmbx+j
      Lxr5x8qt42oN46q2eJWrP/8Vdk2RPPM1Drx07I7zqql5pCeMP7g5yEwpCbkUzNyCahGhJLJS
      wo21o/efRvjD6Kfeo1Sr4W/upn7p50zeukzVvMqhb34X01jd0JMuru1ieB5sN7cwOYK3p5+1
      4Bi7OE8xYxHrStzzvNLkCEZPP3fWoX4+Seouh732nQIgqyWoV9HC937h3YrwBqie+AaadTvk
      QASjLOVaacoUCCcaqs227VBFI8l9bafR03Kc03/mY/T3FQ6cPkS1VMYbMKkVbDRdYlcKlBbn
      MZImmrSxvCbZ2RmsWBvexSGSmZvMZ6tUy4ozJzuwAnHm5xYo/ub/puBA1tsJB48TaEqS1Sx8
      7Udp1ys4k9cpajp6uI2AX5KeyZLobiI3N4evuRcqi1Qqgkh7B/X0LOWSJNrTjS4EpbkpzK5u
      yrOTKE8ci2XyCwH8wRqFTJFwxz6oF6hkUwh/klAsQH5mnNTnV2nq7KY2N4nyxgknEw+bnvvU
      MFC8Eazh09VmAVBS4q7MIwwDJRWykMFo7QbDerFKblib421kbgWCcZaWlwnHw43w6Ltkdnl8
      XuLaEul6dfN17BRjn45y5J0ext+fJWCNkXd9REzJ4qUP8Df1EPeucH3Upvflt2gpzTNvRvnk
      p/8RGT9N3XBYLFqomTFOf+048uYYxuwM9WQroq2NnONh4PWzoGlUR85z6//69+R8R3jn3/4r
      CsvL1GYvURFhEqLC9Cc38UcMCtn9pC/+GhE7TLC7C331/7G9cINr//CPNJ36Kp09jcfPDn7E
      4PlLRI//E6LOTSq+JPXUDVr6w6QXStjZPKHlYUZ/8hOSr3yDUDLx3AaPRtwSscIcc4UtRrDQ
      NMzOfozWXoTHC0pS/fDH2MOXX2gvgwhGEd4AlXKNe8UEK6VAQCJkQjm/9Soo18XOZ6hLFw0P
      ZzosjodzHEzU2ZfUCAovPUf7yC4sYbz2LTJ1nX3/7f9MqDmJOvYlOt7+Nr1f/gazhTIVFePl
      V44yYM3RNPMHQitjLKeK1IY+JX3jKq3f+3dEEiFsAeBg1zx0v/5lIr4KevtLdJ84Qr1cp/u1
      d/DLKTLp2zU39WgPfWdfpThxk4aDtUg+bbLvzS9RX1nACHXQ96Wvk2gJUipW6Tj7Hk2dzZjR
      dnpefZ3S3BB2/fHW8HxUcqOXyWcbvZEnL34GwOKVT/hwZJwb2ezdjWDNF8TsHsA6+TYoiTN5
      6+k88XOI0A1UvYrXUPeNiVdKEmuN418ZXQ28ihDtSoAVJ2ItcvOD60S7Wwj5DQ4c7qTjyCFO
      fe3rmPlZSrqX1Mg44c4ehBDE+7pZGrpO7OhL+KNNeAN+rJYOwme+T8GS/P0H43g9Bm1NAV5/
      /RC5H/wvDI+mCHT1kBu+THTfYQypEWnrovV4H7d+9J9YrvURcz7j5vlbtB0+QnlxjKJsIhpu
      DAV/aye6qpMZvYG3dR8eX5JQSxvhpEZqsUrLwV4CrR1oQKC1k7aBQ4z97C/I2l5Mt05m/Cae
      RC+m+XzM/4XB80yNjqFwufHZNQD0o+coCy/J7o4HyweoXPsDxXyKaNdBzK5HzzHdySilsMY+
      5XCnhS8aul1e5S4SkZ5dYLDWjGrZd2fXSdclOPiPHH+5f70V6ye/uoT7+vfvqmrK7DIiEMFd
      mkJv3w9KIedGVjvM+MCuIuJtqGoZ/6W/IxHzka8p/M3NrOQc6l3H0BIdL5QqC7Dwh1+QdxRd
      Ay2MXBzkyDvvcu0v/yP2UpZ/+2++9GBeIKvnEMH58Rd28EPDwK33vsTn0zfozizQ0tWErmuo
      jQNK3fYGRduaaRueZWE0g+w83Biw5TxaMQ0L4xx8uXc10UaRmpjG1e49CQmPv9FNsqO/cat6
      BeEPI/wh8KzmNGcWELklysJDRzCIv7e50WHel2Z59EOK9suo5p6GMFnexvmrJR+Uko/ddft8
      YBCK+xj/dBykwCkuIz2tlJ1llrK5BxMAPRTD9xh3NncqQteh9ziTuWUWr1wnbDl09jbjDQXv
      mFmFEPQOdNNaLDMzfRHpuERDFr72CKqpg2IqTX55hXImR2puCaf7LOa9Ntt8W9yki5P4F29S
      d8E5eA4Ra4FKATF9E9cfYWSpRnBlhEKkDxVIQszfaJe0OEX+4m/QvQGCx1/HaG1YuaqYayTb
      aPquqjBthSL4e5pYmSzib/KgmT6QVQKtHXjiD6gC7XEnSimoV7AWhmgzcyTak3h8PhC31aJG
      Zerb+wZrRVLmrg+i7DqR5jhTgxOIQJhU02n05s4Hv7+UqPQCeLwIy4/weDe3h3Jd3LkRjK6B
      jQ/dqGBUzDY8e17/uuC6K3ONhB1NR4s2PYZv6OmilEJllxCRpk1h73dDH7nA28eiezvBj4oQ
      AuHxU+86wUTgKJeHigxdHiY7u4iUbsNNKgSOXcO17Q2FWxWJ3k5cKQkmYuiWSVXzoyUaSTCy
      mH2gIq9C09CS7WiheMNjt/ZMa7aJrm8e/I0DGipaKIbmC2xatbRoE7guYgf3DZbFLPbN86ha
      GXd+4q7HKSmRC+Pc+vji3k7wF0VoGiKSREWSpByb1MoMngujxHwSJaFAkFJdkjCr9B/uopBK
      k5mawbQaq249m6MgwOv8DqdWIxj0IV0HR1jYfS+BN/BUDFdhmGjJdrBrD91f7XlACIHeeRBd
      uiA0VLV412NVMUN3W4jDZwb2BOBxIgwTWvuot/ax4DRmfWFaaMBKKUP249/ir+U49ZVzGGbj
      q2/q6aQl4Cfe3bmuKrm2Ta1Q4tb7P6B+/CuoeDeGx8SpVRodIJ9gZQaZXkRr6sBxHHSPd4OP
      y8WpSQzP9uqyUgq7kKJWdfHFkxjGI9RTlA6Oy/p38/Dnu8jMIu7cGEbPIUDh1kqUs3nMUByP
      zwvSwb9wi4Mn92Na1p4K9KQQhnm7moKqM/3hL7iRllydLZNdylCvVEnPLLAyeoN0ycax6ygp
      qeaLDP3hPIvXhunpa8WZv87EpxcAl9lPfk15cZiV5dJDP09h+hqV+2RTCiEaq4DrMHfpIxRg
      l1bIzC4CKWYuDd/lTEVt/nNu/PLnzF7+kMxy4aGfD4DSLDPDk2RGb1KznYc/XymEN4B5+BVE
      OIms5hj++Y+YuXye+aGRRhijlFiau17AYG8FeEoIHTQ9SvM3vsGF0V8z9p9/SigQ42x/lNmx
      SUZ//3PKVZfm/QNkhi+hPJ0cfO0lrEOvo50/Tz07Rd1ow3RWKIhOJn7zV2QXFvAdeI/Opiq3
      3v+YxKn3MHPXWZwt0Pfe90l/8kOyK3Wih14mdf4H1CLnePmffR+PqDD09/8fZa2Zw199k8mf
      /oJiNUX7G/8Cc/59xq8OIsL9dL7qMv/BXzN8ZYaB7/0pucFPuDDyK9re/DN8lUEmr9yi6aU/
      ouNAB6nBafq/+V3yNz7BtHQWrv6e/NQ08RPnWP70N9jhXg4fi/P5hzegUuTAN/8pSx//mFxe
      5/Cf/FPSn/41C0Mj+I79Caa/RMDJc+Ov/4pSRdHzle/iTl9gbnyJnre/Q/7qT0iXgxz9+nfw
      +TeUbzFMRPB2rnYlO0Wg7x3C/iVKjo/5D/+Kuck8fcfOMP9//HuWy3X0f/Lf/0//67y9i8v/
      Pg8InXDXfkytxuy162g+g3SmyELWi9W3j5TtJz81xre+8x5GMMCp149x7KU3qC3PkG8/hShP
      MD9eINy1D091iKzqRZXSHPz6VylMpiguj9H/jX9JyJPn2k/+BiFctHg/VIsMfOWPKaZWaOnv
      p/Pctwn4dNzKMvPXbpKbnSDQ3YNbSzDw1VfIj49TTi9z5E//HGdpmHDXPvwt7QTbj9NxMEkx
      E+DwH71B5uYQ0xf+EVcJHCdIc38XxbHrWF2HMPKjrJQCOIsjtLz2bdyxf2B0MI1bLpJstbCb
      36Vvv6CY1igtDFKevIBqP4Mq6xx99xzlmk49PUWorZVywcP+l09RXrnG0PsXMAwbabahVxdw
      hZ9IVx+eu6hkAHZhkVLBINwUZGnoJk4hTWVlmVLRxp+b4fRXXt9TgZ4Kbo2p3/8Nwx/8DtvV
      qOZXUJoHXzCECEVQHYewTrxDuqzQdB2vU+Pnf/UjxpfroCDQdpDU4GcEWprXL6lZXnRDR9M0
      IokQn//wPzA7kSPc0oTmjeCZuYgavoio11HzwzjzU1z90Q+o1GxUvUAlX8UbiUGlhOH1NSJY
      JaiVcS791x+SqXgRXj+aEEy//0NmxxbWjxOWl2RnB0rz4k80vEbJ44cZ+uF/YPj8ZYSuowUT
      BEM+fG2H8JouvmgS3dAwfT6ErqPqFaqFIr5oFESA0sRv+Oxvf0SleFtPMzw+NE1HBJIkm8Jg
      hPDHvAhcCjOTVKv3Tjv1JvqojP+Sqz/7O8pVQSWVxgglMIIBKtKkkCnu7QM8T6hameT4+/S2
      hwhGw3xybZny4XcerMOlXcfNLCKXJrHcEixPYXeewsImlBqhFm6j1nEEFWuHeqWxIWGYqHrl
      tvtz1f0qM4toifYd5wl6GKof/A1yemhPAJ435Oww3sWrGKZBaXEF3vyz+/bAVY6NuvIrfFE/
      WiSGMz3GgdYw44NTnH3vFXzhRi3T65+NsFDzobl1ZKyNGhZqbhQrNQHRZspVF1O4sO9UI95o
      FyMLmUbJymf9IHtswR+mXpNYIR+tr59lafAD3IPn0FYL8rrZZVStgh5NNuKDAJmaJ+DX8Tcn
      cet1PLJGueZSiu9rqBsKQHHoeC/9dRvDsqgUiszPzhI+GCQcO4d0Xa5fmSC3nMfx79zNsAdl
      rWjB3grwnKGUQlWKkF/Bs3QDO5uiUNPw7D+FU0xTLWYwSjm0cAyr6xhGOIY+9gmRziY0y8Ip
      lXAnRzhwqJexyQxn3ziC0ATafXqkrVW+yCyscHFGoPpfeopv/ezYM4KfM4QQaP4QWmsfZX8H
      lfkFpCEo52ewVQV/pAlv1xGsco7q4Eeo839DpKsZYRqszM2h+/04oRCzs8u88sZRQN138K/d
      V2gCfzhAa20K9bsfonLLgCQ/Mc4jeOV3BHsq0HOMsf8kRt8xrEKGysc/RQb9aO0dmL2HqdUr
      mCtjBHs6EKu7rvnRQTxNbeRX5lEiQL1aRqLh83mwHRvHdrF8foS0qdUcPH4vTqWCIxWWz4cA
      LJ8H09I59Wo/C9MXmHOPkb5xDbOnG1UpozQT0+t9btMdH4aZ87/dE4DnGSEE6AZaOE7gvT/D
      XZ5Fb+5CaDqew6+gDVbxNLfAakmW5r4EyxOLuCWFlZD87//j/0bJlXzla19iJZtGr+RoefN7
      MPgP3JosMPDu1wmlxvnDB5d561//KblRg7ZImmufjeC//DHjCyVE7BaGrwVZXOTKf/kL8hkP
      r/4P/w7/LtAdlJR7KtBOQGg6wvRgtO9rxBsBwvTg+pPItRKMCryxTgrjnyGjbQQDDk7nEQ68
      9TZ5K0xFhkh0dTD58UdMjKU5ePIYkWCAtv19fO2/+zfsa/aiXMnC6AztZ/qYTwkOnjnO2TeP
      kSxPUP3kFwSA8NIFioPXELWHD8d4HtlbAXYycrXV0Sq6P4LfbxFIJrDiLXQnZ8il8rQdPIBo
      6sITrtMsFmk/7Ofm2DKxjk4+fv8Dysrk7B//MeXFf2ClbOAdTtPTbrI0t0R832ECXo2BLh+f
      z2Tofu0MrdoUZzw1Bs1DzNcDO7Z3WHn++p4XaMeiFHLkItGIRPcHcB0bwzBxXRelFLqub2n3
      BPV8nkR5hYGzxxspnpUq5UKRaHMS6bqszCwwN73EQtEh4FQ49ZVzZOcWKaYydBwdQNN1lFIs
      f/4Zf/RuL7bUmK5G+emQiUo8eDLP80JlZXpvBdjJSM3ELWfRfX5AoBRIKTEMo5EVtqWMoxkK
      sjgxwlqajG4YDJ6/QrquMFwHp6kdI9GG2eShMjFCrVhC03Uaxb5ua8u+5hYy6RKxeABzeRj3
      2hK88qdovp3VQtWX7NoTgJ2IUgqVW8GsrGB2JlFKoWkarnTQ9UYK5t1qmFo+L1JKdF1HNw06
      DvSQSbuIRBJrbcVQEDHBGwriDQXJLS6TX1zGH4vg2g7VYgnX9VAqVvntYAmttQUnt7zjBAD2
      bIAdiSrl0Ec+INzbtVrFT67nIottkmXcWg1Zq6Fcl+z8MumZBZp6OgAIN8WRn36ACkcQ1mpo
      sYByudq4LhBMxJi6fJ2yC3V/GKOQoV4MU5Ma+UgPmmHgjHyOHm+9o6re886eAOwwlOvgmfoM
      4bPQVhPhNybD33G8lGSvXcNWAs3nh2QLE9eHibU1k09luHllBOPQMYS52Q6sJ9sYunidarlC
      UfeiEh0I08SMNkIIplePE0I0PFDJEPVrH2Kdee+Jvv/jZk8AngFKSlQhgwjHHqoWj3IdrCu/
      4EB/nEJWsjR0C5FsQjctzG1Ks6zdS9ZqCH8Q7/79KKlILy/y/q8v4hgWdPY3GmpvwYgnSFf9
      iJiBYRibm3xvg8xnUa4f5brrtYZ2AnsC8JRRUmKf/wki0YkRjIC+WQBmf/l/MjlXJtBykKNf
      /QYbU2tVPk1bc4BAUxOBpib80RDZ+UWcosu1v/sJ3d/6JsHI5sYcynWRpgfvgYbpKzQNvbkV
      l1YE268aa2he34O9k2NTvXYZ3TCRyoX9Jxvh1A9QnuRZsycATxmhaSAV7vQthGEhwjH0ZMf6
      54avnYFvn8VveBD1Fa7/5L/g6X+dqMeizVygImvkpm7y4W8/o/vsWwzsb+b8z37NxOQcickx
      pqfHKHrbOf6lU+QmJliayzdyi3NZjHij5P3jjvNXjo3v1TcxmpqR2Szu1d9QDiXQDS9GS0/j
      /QzruRSIPQF4Bpgvfw3l2o0sLHOz0eiUF5j98JcEEz0Y5Xm6vvHn+D0Vxn78a/adtFiaTuP1
      +MCp8tnvLuI5EyW6/2UGsgIjIimOxulNFpmenCP72S2OfOdb6IUMdqX+xN5H8/kb9gUgSwVE
      Ikako6NRbj89Ru3a++jH3sJY63L/HCXa7AnAM0B4fAi2Vy+E4ScYbScYjmN4yyxe+YhQWyfC
      TTN8YZbMfAnD6KBt4ADOzRT55WVGJ6dwNR9JfxjEMmOXx4gMmFiagTs+TN22Ea0d297vcWN0
      dAGrblhNYCSb0SNRStc+wJ4eRIs2Y8SaER4fCK3xXXgeTNV6EuztBD9nVFOTZBcz6P4oia52
      suODaJEOfHqZzNAgHcURjn7pFDcu3aJcdIju6yJfLKMHYsRbYxTmZ6jaOvHmOK4LzvIi+fFx
      vC+9imY9m5qfqlqlPjGG0bMfpMRNLYNpIRSgBG6kE6P70HpnnafJ3grwnOFN9NCa6Fn/Pd5/
      HABZMkgUpmnr78UIRBGuoOXVs2i6vmktibT3sGYGG0qRuziFsDx3uDmfJsLy4Dl4eN0GMAK3
      308pBYUc9q2PMQ+cvV1LaQPKsRtlHfXHP1z3BGCHIOaGiPZ0sLTdzaBfAAALzUlEQVSUxq4N
      YiSb72pUOqUSubExbNtF69mHaZrPNMH9XsavEAIrHMDwOVRv/QG9rb9Rtt0buH3eExj4a+wJ
      wE4hnESrVQkeOUolm8Efj297mHQcsiOj6H39eJ/BrL+xYci9GotvRTMNfE1B7KUbqEoJN9SF
      ebCRlvkkhff580vtsS3KH6GUq+A6EjPWGPzrHew3VJO283ncZ6zyrCFW/z3w8YaB1dyMp6cP
      kZtdD8V4kuwJwA5BC8Vw9r1CdjbVGBirY35jJWfluhRnZzGaW5/JMz7MYL8vho6qPvmkmz0B
      2EFogQiq+wSFmQXYZnaVjoPjSnT/vesI7QSUx9uojvGE2ROAHYYWTlCxkjiVCmtz7poapFkW
      gXgMe3kJHkL/fhw81tkf0EoFtMiTb9a+JwA7EL3zIKW5hdXfNJRU66qQr6UFd34Wp1hCKYWT
      ydzRcUa5LrJaQdn203/4B6Bec3ECrU+lV9meAOxEPH4qWoh63bnDQ6JZFrGD/YjpcZzRIezB
      65tCD9xiAX1yhMDcBO7o4CPdvp5bYn5okNT8MvJBFxqnSuUBwjEcW1JdymIdfDqFufbcoDsQ
      IQRax0GKi9eJdbaiaRpSuuufe2JxPLF4I3/3/HmqY6Noho6Ooilo0vLKcZQruXn+yiPdP3vj
      KjlvDHdqGt3zBrH4vWwOl/TYOKGQw9hiiKPH7h6SIW0be6WAd+Dl9eoXT5o9AdihaNEm7JUw
      9UoNj9+L0HSklOuNt9dWhviJEzjFImpxlq4TR/BGGk2+peNimjr2I8TvK1mjsLyM1/BheR2G
      f/UzSiJCW6vG5K0JkkffwlceYuzz60RO/hFRO0cwcu90SaUUtaU0ev+raE+xNumeCrRDEZqO
      1n6AUirXGPCNROAN7tHGT8Pvx9PUhApGkK67LhiaodM10IcaHcSeGEPV76+erBm6mhWl9+wr
      JGJ+qtUSrhbl+DtnqWRyIKvM3Rij5dgp2k+/w8DJTuxiift59GU+jxbrRgtE7nPk42VvBdjB
      aMEotq+ZajaHLxZtZJeJVZVfNarFrU1xWzs/CgShZIJj58I49Rpzg6PkHQ3R3AaGcc9VQTlZ
      Bn/5c0zl5dC+ffgTCXQBrlNH8wbwmR6u/e1/piAj4AuiWRZCM9D17efbyugo0ojgeenQ4/x6
      Hoi9aNAdjsytYC7eINwaR9O0zbWAlGoIgVBUh2+x79QRTK8HuD2bbwxXKKWzZKZmyBZqyJ79
      CMN47O7N7SiPjmO9+t0nfp/t2FOBdjgiEMGVOsKRd4RFCCEaZVLcRhmU7SpGbCQQj9J56hjx
      WABqtacy+AGE/mzCtGFPAHY8wjBRfWfIzaeQleqm+KDpS7/l81//hoWZFUxDX22WoXDtKuml
      zN2D1ZRC1e7df+uxIp/dfsSeAOwChMeHc/AcqYxLfnQct1pHupJCrk734X4WrlzFcSVrTnu3
      kmX85hQrM+NkixuMX7vC6MgUgUQce3aK+uQ4Tmrlyb+ApqHUkw982449I3iXIEwP2sGz2LUy
      K0MX8GtVMmNXWF5ME+0+RGbkBjcvfoqrhXnje2+glKSwOI1eLjFRiXEgscJsLkoqkyLRaTEz
      dAUn1El/axTiiSeaxyuE+VDlYR4neyvALkIIgfAGME68TbX7ZazkEc5951u449dwPIozf/rP
      eetMgNlUQ7uXrose34dKjTI6nKenL4iUinw6TbC5hVQqRVNXayOF8f53f6RnlkrhWsFHOvdx
      sCcAuxQtnKBcXuRX/89fUhJePHqAm//wIz4Zs+hvswhGQvhCUTymSUezh2qoBY9mEAoH8Hg9
      2HVJ175u2g7tx1vMPEBsvuJRhKC+ksZo7X2UV3ws7LlBdznO5E08zjJkljhwtB9fJASwyVsk
      VWMHec2FKqWkXqrg2jaGx+LWpVvo+we2vf4XpTgxh+f0V59Ivu+DsGcD7HKEP4RIL6AnW0jP
      zNER2TyQ1zbIhBCUM1lmrw2imRZC1xGaRmUlhWrteiLP5kpQQodnpP/DngDseoQ3APUaSlN4
      A40+AhtzBRSNMAolJUvD4zSdOIlmmesxRYtXrlEzjPXj7nGnLb/fP0zUWV7E6j32TCvG7dkA
      uxxhmCipMCNx0gsryNUOMltxbRtHgu6x1lUhIQSR7k5UufzYN8VUrQp6GC3e9liv+7DsrQAv
      AEIIhOmh7ApSVz7g1x/ewOuL8vo3vkzA7yEzO0+9XMUK3emNsUtlZK2GW8iDYaJ5vdtUaXi4
      2V8phUyn0TvPPPMyiXsCsMtRlSK62WiZpAfDzF++SevJs2j1NOc/vIGYvYbsPErXQC9yapSy
      YxAIS+Ymlmk/dhJ/2EvhwxuwsEzYp6EOHEM4VYQ/RGb0JlURprMvSdX24bNcaraLL3BnfoCs
      VlGOg3LqUKlCqBMVTj7z/np7ArCLUUrhLoxjtbQihMDT3MaCkAx+eoFAJErHiTPMLN1k4aOP
      iRw/wsRnFzmghaBaYfjTy8ws1elvqhE5dobs6E3suofi4gLayjjawOssj1xndjCF98//jOzw
      MG3tFhWzi02dkhQ4K4vUVvLgDaLFWiBoYvQcfabFutbYE4DdjnRRalVJcSVO2WXfu18jHgpT
      XRwlOvAKYeszqjVoeulNAp0Jrv/0FwwcP8LsSoZaLUjXvh4qU4OYpok7PUFxdgRPch/+zpMM
      eAapOT6ieprRsRBH376dzGJns9QzJYQVxHr9y6Abz8Wg38ieEbzbsWtoholbq1EcGSR84mWS
      La14fB5CbR1U54ZQzQeIBC3i7R2YiTbaXj3K4FwZn2kQ8it+9xd/wdyyTdcrJ5BuBYIdJNpa
      cdLj1EPdREMm3uYE/lATpgZSulRm5nG9HXjOfhPr5FsI49mWZ7wbexthuxilFM6Nj4i3xZD1
      GqWpCXz7D6FwcaXdMI7vESKtlCJ7/TOmL33Oye//czo64uBKbvziV3iPnEQPrW2q1Zm+eJW2
      M2fQhaK+sILoPo0eST6tV31k9laAXY6sFkHTQAiUu5Y4rx5oNhYIgs0dvPHd79DZEV+NH3IQ
      lgd7broRNo0CYdL18hkMDWSxCMGWHTH4YU8AdjdKoUsbEA0PjJQo5aJoZIqt5xLf43y1skSk
      63YX+OXBIbw9++4aGyQdB7yhx/wiT449I3gXo6olfAEvoKjMTqMnkjjSXne9r2943UUIpHSx
      bZfRjz7BaxnYrsSNxHGWFzGaWtaSjzefpOk4S9ONALfnUOffyp4A7GLk0hRmOIRbKaNMAzMR
      Bxpd5bcmyd/m9qAWukHgxGmg0d2SfBZnfg7PwSOr4QurYRSrxyulwK5jJHt3xOCHPRVoV6Nn
      ptFCQUpToxgtrWydrTcLgOD2ju5aKATrgXJuuURtfg5P/6FNsTubrui4SFtDb+pkp7AnALsY
      KV2k3UiP3Ngf7M7Z/24rwWp4dK1GbXGhMfiNNaVBbf6pFPWlFFr/KwjLu/Vizy17KtAuRTk2
      2mq/LVmvopRE2zBzP6hPXrku5cEbYHm2lZM1+0GWyxBsQ/M9u+yuR2FvBdilqEoBYWo4+Rx6
      KLIpwnN71Wfjf7dxKxW8kTCRznbqY8O4xcI2NxPUl1LovUee0Ns8OfYEYJcifCEoF6kvL+Pp
      7F4vlbg1FLoRJrH530YhcHJZzFAIKx4nPnAQsTRHbXz09nUUOIuLiAOvPbOsri/CngDsUoRh
      ImWj75aTy62XHblT9bkzdHmjEKhyCWu1IZ9mWUSOHCHcHMceH0VJRW05i+w4iR5tepKv88TY
      E4BdipISYVhYLa3Y6bvV9hGIbYaAWquyu1pgS9Y3F8myEkm8oQCl8QmkL44Wa378L/CU2BOA
      XYqqltAsA93rhVr1LjkqW+2BLddQClkto/vujO+383mU5sVo7398D/0M2BOAXYq7MosVCSF0
      A80wENq9B/tG1lUgJXBcqLtik+2gpESafjyHXkV4fHe/0A5AfDC+oGbqD9cgYY/nH7Uwhifs
      BSmprqxgNjWjbZvKeO9YoPLSClRLWPEY3mgYEMhalUrdQEvevdvLTuH/B81zwq2T6TWTAAAA
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAbfElEQVR4nO3deXMc533g8W93zwzmwOAY3BdBECTBWxRlSZZpRaedeLOOkziJq7zezca7
      SXZdW/vPvgG/it3a3draSipxyutDjq3Ysi3JkiiKh3hTJEEAxA0QxwzmPvp89o8BQdCSjDFM
      gEPM78Oamu6ZbvTTnOfXz/N0P/20ppRSCFGj9EedACEeJQkAUdO2NQA8z0NqXKKabHsACFFN
      fA/nzyiUKmdwTdfRuJfZNXSjPC9ENXo4AaA8hq+cYXYphxHp4nivzq9uzNAcbuW5l54h9FA2
      IsTDpz2U06BKoYBSLsHo5AoNeoFsXQPdbR20NEbWqj6u66Lr0u4W1ePhBACKTPwuM8s5BgYH
      oZBgYnaR5OISQydfoSVQbvy6roumaWiaVIpEdXgoVSDluVy68CGh1l7GJ6ZpCpgUSiaOp6Hr
      rB31lVIYhiEBIKrGQykBlFLk0iuYjsLw1RGN1JHJZPAF62mIBNeWcxxHAkBUlYdUBaqMBICo
      NtIiFTVNAkDUNAkAUdMkAERNkwAQNU0CQNQ0CQBR0yQARE2TABA1TQJA1DQJAFHTJABETZMA
      EDVNAkDUNAkAUdMkAERNkwAQNU0CQNQ0CQBR0yQARE2TABA1TQJA1DQJAFHTJABETXtIAaCw
      zTwLdxfIFi2U55BYWiCdLz2cPy/EFnlIo0O7jN68St6CXEGjv9PHdNykkC3w/Cu/R3B1IDgZ
      GU5Um4c6PHomPst03EF3k/TvO05x/AL5vmfoC7kopcoP0JDML6rIw3lAhgYrsxMsW34O7O9n
      9MYKoHAdMIzy6NBKKZRS6LouQSCqxsMZHt11uHDhHCoUYzmeYqgryrtv/hwVjPGlI6w9E8Dz
      PAkAUVVkdGhR0zYsAZTycN31T3fUMHyGPPhO7AgbBkD67gg/+em7zC+nibU2kzfD/PV/+TdE
      tiN1QmyxDa8DNHUf4N/+x6/R3z3EX37zm+xtMLC3I2VCbIMKL4Q1cHC3zv/+H/+dTEsf0a1N
      kxDbpsKzQBpNsWYOPr2ftogj9X+xY1QYABk+uHAFWzuEpS3RfeQwLVubLiG2RYVVoDAdsRAT
      o2eZMOpp3No0CbFtKiwBTGLdz/Ff/1sns6OTmJWvKERVqyAfF3nnR9/jtTdHOPzEHkyvkcFn
      T2x9yoTYBhVcCfYo5hNcvTzLgWOD6LqfhvrQpjYmV4JFtamgDaATiviYmbhLfX2EMz96nZWt
      T5cQ26LCRnA9IW2GH/7gB0wSlOsAYseouDNcNj7NxKJNe0cTHa0tm7oWIFUgUW0qLAEK/OL1
      7/PB2QkuvvEWma1NkxDbpuJ7gjVNZ3nqI8ZSJoGtTJEQ22jDKtDCyFXi/ghzVyfpGmino38v
      HU3hTW1MqkCi2mx4HaCxLcabP/guZz6cY89QH+HoKN/4669KQ1jsCBU2gi1uXbmFFgri84Xp
      H+zDv4mNSQkgqk2FbYAS5949zezcPAuLK3gbryDEY6HCLj0+0ExM00TXbbbtJmIhtliFVSCH
      xZl5Co6L4QvR3de5qc5wUgUS1WbDfJyYucZ3v/cm9wY5DEX7pREsdgwZFkXUtIprMsrzcFeH
      NtQNGRZF7AwVBkCJ1//h71kwdYKRHv7061+SYVHEjlBhAHh4oW6+/hdfwK/rH78GoDwWpkYY
      m8pw4oVnYOEOb10eIRSIcfKVZ9nc3QNCbL2Kq0B6cYnvfuc7BCM9fOVrX/y1EkCjsb2PrvQd
      XCCXKvHU51+gO7q5LhNCbJcKAyDEgUP9TJ25Qe/R3XwsW2saoXAEY7VhUFfv58Lp97isgrzw
      hRcJ4qwNj+66rjSCRdWoMADSnL2a5G++9S1+8n+/Q+rp/TSv/1opioUcuUKBulweQw9x/Oln
      WR6+TMqC3nB5M3IWSFSbCrtCRGgNpfjh979PIhij/mPfKxam75BVivnxacL19cxNjOLrO0Kv
      1IJEFavgOkCRW1fHWFmeYXwuQaxrHy9/8bObathKCSCqTQVVoADdfT1EGyK07XIwfBEZE0js
      GBVUgQwaYwaTk1kG9+0lMzVOcevTJcS2qOBgXuCN7/wDP/rVKOcu7yLQPMihrU+XENuiwr5A
      JYavTdHS3YKhB2iMNWBsYmPSBhDVpuIrwdfO/TM3pwO0dbfyV//5Gx+/FiDEY6jCAHAw6vvo
      6Sigu448IUbsGBsGgGMVWFkpcOTEk2SXpkmodjn6ix1jwwDIJ+c59fZ5zNX5QMiPDZu6KV6I
      arPhadDGjr189et/TGfQh2PbWJYl9wSLHaPCNkCYl//0L1Cewxs/+mnlw8kJUeUqDIACb//w
      dWazRbJmiBe2Nk1CbJuKu0MPDu3Gmlnh6OAxaQSLHaPC2kya906NcOjIYT56W0aHFjtHhQHg
      oyWq+NXbb1NSBX7xk1Nrw6QI8Tir+H6AgcF2Muk0Pcc+z1e//DzBrU2XENui4irQxRs5/vZb
      36J48yKprU2TENumwkZwhI6GDN/77v/DrG//hDvChHg8bdwbVHnMjd9mMQ+7ertpamrAp2+u
      N6f0BhXVZsMqUHLqOm+8f4Xl8fO8d21x05lfiGq0YQCk4iu09+zhwPGD3L16jZnZRZztSJkQ
      22DDAGjZtRvSs1y4OENnr8aVa6PSHVrsGBXeEeZRKtrUBQNYpRL+UGhT/YGkDSCqTQX52GVl
      cYTv/9MbTM/O8LPv/YtcCRY7RgWnQR3Grl9n+PYI/qhF05798nAMsWNUEAB1PPPqH2NZP2Ym
      bZFPrGDCgx3ilMfM2A3uTOd4+pXnYHmK9y/eRKvv5NXPPyndp0XVqrg79N1lgy9+5V/h132f
      0A1Co3P3EHZhGA+YubvMZ1/4ApnhiyyY0BV4sJmxjQ+lEeI3qvgpkemF63z3nxYIR/v482/8
      4YPDo2safn+Ae5cIdF3HZxiEwxppE1zDldGhRVWq+BlhhXScnFtHnaFoaGx48BFJSpFeWWb0
      +k1ih4+iLU+TNRpIz85y4qUXiKzWgeQskKg2FVbPi7zx2t/xg9fOcer1Nz7hLJAil0kSiMUw
      Uxl69h2iHpPB40+tZX4hqlHFA2MpzU9q7jZeSwMv//rXmk7PwBA96z7aMyQDKIrqV3EVKBWf
      YWzsLi39exnoim1qY1IFEtWmwgpKkrd+cYPjzzzF2Du/YmVr0yTEtqkwAOrx2RO89tprjFmG
      XAgTO0aFbQCb3qHP0ru7l+b2VhkVTuwYFZYAOlNX3uHdi9e4cP762jCJQjzuKiwBDJ5+9Q/J
      Wg4+f710bRA7RoV5WWPk6i/54Gqc8ZvX5YYYsWNUWALkWCnU4bOKZHPlznCbeUqkENVm4xJA
      KfIZ6N/VQSE/SsMTz9K0DQkTYjtsWALkFsf4xx/8HF132f/8V3n1yd7tSJcQ22LDAIjPzTHw
      xAs8tR9++NpVVnY30Ni8uYfkCVFtNqwC1bfGuDt8ntd/9iG2M8sv3jwn44KKHaPivkAPg/QF
      EtXmtzylr1icmpYSQOwYFZ4GVXiuh0JhFkp4W5smIbZNhQFg8S/f+TvuliCTzrJv8WW+/KLc
      7C4efxXfEZZz2vn33/wPDLW1kJ66Q3Zr0yXEtqiwBGjgwG6d//O//ifRjr3s7WqRK8FiR6gw
      AEoU3Ua+8rWX6GyuRwPkPI7YCSo8DapI3R3n5z9/k7jZwl/+7Z9t6iEZchpUVJsK2wAmV89f
      JGP72L1/N4GtTZMQ26bi+wGOPPcyA9k4M7MZHJAgEDvChgGQT87x7tvvMRvPMPPRBC/+p7+R
      zC92jA2rQIXUIncmFwg1tdHX2cvQoT2VFhtCVL0KHpKnsG2TbCrBxTPvM5sO8Wf/7o9+48gQ
      TnaZU+cv49LIyVeeXTtlKo1gUW22pDPc8u0b5Dt3s7vxgSF0JQBE1dmS2oypSnz0/nvMdw3w
      zJMHwHVkdGhRlbakBCjksvhDYSbO/4q6Y6/Sv1oQSAkgqs2WlABWLs65s6P4Grr5bHjj5YV4
      VOSGGFHTpEezqGkSAKKmSQCImiYBIGqaBICoaRIAoqZJvzZRU5RSKKVYyGZ5a2RYAkDUBqUU
      mVKJK3OzvDkyzLX5OaJ1dXIhTOxspuMwnVzh7dHbnJmYIGea7Gtr46V9+3m2f0BKALHzKKWI
      53NcmJnm3bFRbi8t0l4f5fcG9/L5PXvZ09KCzygP7ywlgNgxHNflxsJd3hkb4eLMDAXL4lh3
      Dy/v38/Rrh4agsGP5T0pAcRjSylFslBgKrnCyPIS74+PMZNM0lYf5UuHDvP8nr10RKP4DONT
      h/GREkBUNaUUrvJwXI94PsdEIsFEIs54Is54IkGmVAQ0/IbOid4+/uDgYY50deHTK8tnEgCi
      KihAKY+S7VCwLZayWSYSCcYTcaaSK8wkVyjYNiG/n0ggwK7mGHtaWumPtdDf3ExPYxMB329f
      oZEAENtKAZ7nkbdMcqZJqlhkPp1mJpVkLp1iIZNhIZvBcV0agiGawyH6m2MMtLTS19RMV0Mj
      7dEofuN3f0aRbWYkAMTWcTyPdLFIslAgUcgxl04zm0oyn06TLBRIFYsULItosI7mcISWcIRd
      zc0MtLTQ09hES6Se5nAYn/7wOix4nkMueYfFybdZnHhLAkD87hRgOQ6zqeRqdSVZzuiZNNmS
      ScEyMV2X5lCY9miUjmiUnsYmepua6W5opCEYJBIIEAoE0Lcob1ilNMsz7zE/+lNSS9cxfHW0
      978oASB+e0opUsUiY/FlRpeXGF5cYGIlQd60sFyHtvr6tQze29hEb1MTXY2NhP0BAj4fgW3K
      A0p5ZOK3mBv5CQsTv8QupWnqPE7v/j+ite8kgWCzBID4dEopHM/Dcl3m0ymGFxe4vbTE7aVF
      lnJZdE0j5Pezr62dofYOhto72NvWRn2gDk3TyqOIb/NvrTwXs5RkceKXzN7+Z3LJMQKhGD37
      vkzPvi8TbtwFaGvpkgAQQDmz255L0bLJmiXuxOPcXlrkTnyZiUQC03Wor6ujvT7KUHsH+9va
      2dPaSm9TEz790T40VykP28yQid9iduTHLE+/i6b7iHV9hp59/5rW3s9h+IKfuK4EQA1SSlGw
      bdLFIol8jqnkCpOJBLPpFEvZLPF8jnAgQEskQn9zC0Pt7Qy0lDN7cyj8SH8/pRSOlcMsxilm
      ZknHb5FJ3Ca7MkIpt0A0to+uwd+nvf8lwg19G6ZVAmCH85QiXSyylMuykMkwuZJgciXBUjbL
      SqFAzjJpDoVoq4/S1dDI7lgLu1tidEYbaI3UU+f3P9KHoTh2kWJ2jkJmluzKbdLLtyhkZjAL
      i7hOiWB9F+FoD9GWIdr6TtLYdhSf//7zixQKz3OxXAvLsbBdqzztlqclAB5jSilKjk3WLJ9T
      z5ZMcmaJjFkiVShwN5NhKrlCslAgZ5q4yqMz2kB3YyO7mmPsjrXQH4vRGAwSqaujzvA9st9G
      eS6uU6KUXyKXGie7MkImfot0apKCmaZkFSAQhUAUI9xGXdMe/NFePF8QV/NTci2KdpGiXaBk
      F7HtAq6Vx7EL4JTQXRvddTA8G91zyvOeLQFQjRzXJVkskizkSRWLpIpF0qUi6XXTqWJ53nQc
      XOXheh6eV+42oAENwRDt0Sj9zc3sbm5iIBajuyFK0Kfj1zU0FCgP5bko5aKUt/ruojwPpZzy
      d6vfe56z+p17/331M89z15b3PAfHtbFcm5JbwnQsTMei5FqYjonpmpQcq/xulzBdE9O1sTwP
      GzBdpzyvFJ6mEfQ8QsojrDwiaITRCCuXkOcQch1CnkNEuYSVR93aS6Gj0Cjf8qgBmlo/v256
      KwJAKY9SsYjur6POf//ydK0FgFIKTylcz8NdzWymY5PM50gW7r9yhTT5/Ar5fIJ8MYlVShHw
      itRh4sPFwMHAxcBDx8HAW/3cJaArggYEdIVf89CVA56D8iyU51I+Sw/cO+tRzvrl9K1OP/hS
      KMBGx0bH0jRsjHXvOhYatqZjYaxOG2uf2atZTGddZlMKv1JrGTWiXCKeR0R5hJVL2HOJKI+I
      5xKm/B5RHkHloWk6aDpoBpq+btoXRAs2rr0INqAFImj+EPhDaL7Vd38I/GG0X5u+t8yWBEB8
      6iZX7ixiuX6+8Orn8a/m98c9AFzPxXYsXNfGde3VI6CD49jkzTzZQoZ8IYlZyuBYWVw7j21m
      scw0xWKSQiGN5+QIKIuAZlG3+m5ooOt+NN2PpvvWXmgGuq8O7s3rPtB8D86vvrTVz11NxwUc
      BZZnY9olTMek5JQwnRKmXcLybFx0HDRcNJzV5R2lcJSHs1qKGICuFL57R1YUQeURVIqwphPW
      NOqUIuC5GK6F33MJ4BEComhEUAQ9l4BnYygPdD/ofjTDD4avPG/4yxn3Xmauu5epG9CCDVAX
      RQtE0erq0eqiq/P1aEZgLah/F1sSADevX2LX/uPkxy5Q2v0MfSGv3KvPdfH7/di2DYCx2p/D
      dV0AfD4fruuilELXdXRdx3GctWVT6SQ/ffcMBbP8rHqlKP8n3NsDbfWzT2i23d9JbW1e+9h3
      PPC31raxynUd8qUsppnHsgu4dhE8E13Z+HDQ8Sr43/l42nTdj+EPo/tDGL4Qui+IZgTRjACe
      cnE9B8crv7ueg+s6OKvT997Lr3VH/NUt6UphoNaOyPpq9UAHDHXvc7XuO/Ch8FF+DJbP89Aq
      3i8NdOPB4DRWg9UIrB59w2iB8LqjcRge4WnUx+p+gGKpxOU7S2QK7mo+2jh2P/EYod170x74
      TFv/5dpn5Xld09F1Y/WgEwJWR/3V1y18b+pjG9XK/zQNtPvTGg/O4wKuBub6VX1A8P4f1e49
      pFZDNzQCxr2Eams7oa2f/w3c1de2UYC1+oJfn3kktrQKZHsBXn3l5EOrAimlyOXTOI5d8Tob
      bkm7v9SnL7uaYdel+5OmfvNH9zPw+q3d/5sfX0m7H5X3v9fWL7s+WNevr/3acuLTbHEjOEid
      /37x9ri3AcTOI6dBRU2TkeFETZMAEDVNAkDUNAkAUdO29TrAvQtbnuehb/I+z0ex7uOWXlm3
      ctt6Fuge27bx+/2bWtd13bUryNu17u+yzcdtX3/XdR+3/X0kAeA4Dr5NjOHyOKqlfYXHb38f
      SQAIUS2kESxq2iMIAJvLp9/h9LlLZM3Nd8WKxxMVLVdMLfLBqfe4czeF55jcuHSWW5OLKBSp
      hSnuzCYARWJulPfPXCBd/A39jJRibnyYVHHj3pELiwsopUAp4rOjnDp1huVsCddMcebU+8yt
      5PGcEjcvn+Pc1REcT7E0dYuzF69Tch5loexy6+ZwRf0/N6KUx8LELU598CHJvIWVXeb0+6dZ
      ztq4VoFrH37ApZvjOJ5ifuwa5y4Ps7W77jE9fIV33n2f2UQOxSMJAAst1MWxfR1cPncJSykc
      28Z2yt2gHcfGdpzynf62heuVbySx7fLntm3jeh7zc3PYtoXjlrtaO7aN45TvbHJdF8ct/4SJ
      ZJYjJz7D/Pgwy5MfoZoHKS6OsZJMslzwkVuZwy2mGVsocvzwLoZvjuB9yo/guSZTs7PMzcyD
      UjiOg2XZeErheR6u41BMLTEXzzIxOYFS4DkmOSfAk08MMH57issXrrLv2GEmPrpOKpOksWeI
      bpVkKrnIrakiAy0+hsdnt/H3eJCTnGRhep6JdPn/0vMUyvPK++iW99f1PDzXKw9z6JbvDrMs
      C9d1mbpzg+VkcXV5k6KKcHx/G6MTc1y7dosDRw9x/fJF8qkErYNHCFkp4vO3GUmG6G8scfNO
      fAv3ziNfMnjq6SeYufYhyZLzaLpDGz4/0VgPvc3TTE9OMXLtEgUnwosvH+bimRs0tPfQFi7x
      0e0ZjOY+nmm3ODtbwsumaW6NYNQPUm+vcPb0KUoqytGhGBfPX6egNfD7J5r5xUd5Dh0a4lB/
      Oz39u1mYvEOsu49iepGeY21Y7goF5WPvQDc3rifQ/XWQX+L0uSVKjobjHV7tZvwgc2Wc+u5j
      FNILeFaQt966hM+waRo4gVq+Td4NsLu9iXykdW0d3R+kr6eDybFhOnftYWUuT2tjEz1RA9XQ
      SXNuiVsqykE9Q7ZnH+0dNtPjyW38NR40OZ3h6MlDTIxO0NQN8XwjDcUFrJ4Ops9fpOhBQ99e
      Quk0+09+huvnz9JS53FtPsfBQ4eZuXUDy0hx8pVnaQoE6ett4c7tMXp7eli22mlqaCIW8hNq
      64XEXZZ8IQKmTffgAC1Bm8WJGaB1w3Rulqb7qAtHeWKwibFE9tHdD+BaeVI5HcOexYi00hcJ
      kl9eoPf4Cxzs8HP+7R/T2N5NMBzB5w/wmec/R2n0Gl3H9jF+bRbX18LJZw4xcvkCM7OzaPVt
      9IXDOLrO/uPPcqgrAMD85Ah2qJtDnU3M3ZwnkzGxSgUajfun6jQjyGdOvoSyM5y/PIXxKeXi
      yEejTJjTWOkcu/Z00Dl4hCMDES5emyYQbOJzTx6nODdKft06yrMYGxmltW+IloYQS+MlLMcm
      XVJEc8uML2Q5euwgPvsuxVScYlNg7ekl207ZjI8P48wvkipq9HcPopTCtExUKUGo7ylOdDqM
      zGfLoy04FqajaBnoo70wRabosf/gYepb99HoN1CuzejtMTr3HKQ5onN3ZBzbcSg4LmZqnpm4
      w5FDB1DxEcYSWcxYAc2o3/r99FzuLpdo7E1gfPvb3/721m/xga1z4/xpxufjdO47zGBHI/Nz
      c1gE2HPgALPXzzCdKLK7r4OFu4v4ws10N4fQI81oZp5IcxNW3iao0ly4cgNfSz8H+9tYnJvD
      1kL0dTVBsJXGIIDL7SsXmZ6fZ3ohy74D/dw6f4aiP8Zge5D3Tp1mdv4ulr+e/NwIl25Os+/o
      MZrCgU9It2Kl6PH8556jt6OBQqHI6PXrTM3H2Xv0GAYerbEmHKuE4wtheA6tra14ZoFrVy8x
      NzdPsmSwtyvM6TOXqe8dJGwucuP2FDNT40Q6D6ESN7g5lWT/wQNE6rb/2KTMJFZkgOeePkZ7
      wMQNtzB58zLxrEPX3v0kRy4yMjmHv6GDlro8V29NYoQaiIVh+u4Ksc5eWoMOly4O07KrF5+X
      5fLZK8wvzJH1IvQ1Kc5+eJWOgcOwMsGNiTmmJ+aI7R0if+cyt+dzHDpyiKB/q2rmisWJm1y9
      NYYW28VQf5+cBt00O8t03GFXV/OjTsk2KXHh3Q9IqQBPnHiatoa6R52gh0ICQNQ0uQ4gapoE
      gKhpEgCipkkAiJomASB2pKWJ65y/OYUCFkavcnH4k6+uSwCIHWnk5ll++bN3yDlw7sY7nP3l
      lU9c7vHpuC3Eb0OP0NFusDQ/jBbcjYHHjfde4+2PljCCMb5w0Mdr13JSAoida09XjHPvfEjP
      kX2Aw+Romj/5q2/SEcqSypXYf+IlCQCxM0WbWukdGqJg6uxtbaSjs51jn93Lz//x73Gjg3R3
      d9FcH5ArwaK2SQkgapoEgKhp/x+/3KZzEcqqMgAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
